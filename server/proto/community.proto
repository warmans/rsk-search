syntax = "proto3";

package rsk;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/warmans/rsk-search/server/gen/api";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://scrimpton.com";
    description: "Community functions.";
  };
  schemes: HTTP;
};
service CommunityService {

  rpc ListProjects (ListCommunityProjectsRequest) returns (CommunityProjectList) {
    option (google.api.http) = {
      get: "/api/community/project"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "listCommunityProjects",
      summary: "Lists community projects."
      tags: "community"
    };
  }

  rpc ListArchive (ListArchiveRequest) returns (ArchiveList) {
    option (google.api.http) = {
      get: "/api/community/archive"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "listArchive",
      summary: "Lists archive items."
      tags: "community"
    };
  }
}


message CommunityProject {
  string id = 1;
  string name = 2;
  string summary = 3;
  string content = 4;
  string url = 5;
  string created_at = 6;
}


message ListCommunityProjectsRequest{
  string filter = 1;
  string sort_field = 2;
  string sort_direction = 3;
  int32 page = 4;
  int32 page_size = 5;
}

message CommunityProjectList {
  repeated CommunityProject projects = 1;
  int32 result_count = 2;
}


message ListArchiveRequest {
  repeated string episode_ids = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message ArchiveList {
  repeated Archive items = 1;
  int32 result_count = 2;
}

message Archive {
  string id = 1;
  string description = 2;
  string related_episode = 3;
  repeated string files = 4 [deprecated=true];
  repeated File media = 5;
}

message File {
  string name = 1;
  string thumbnail_name = 2;
}