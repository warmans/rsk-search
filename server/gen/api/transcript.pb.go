// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: transcript.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContributionState int32

const (
	ContributionState_STATE_UNDEFINED        ContributionState = 0
	ContributionState_STATE_REQUEST_APPROVAL ContributionState = 1
	ContributionState_STATE_PENDING          ContributionState = 2
	ContributionState_STATE_APPROVED         ContributionState = 3
	ContributionState_STATE_REJECTED         ContributionState = 4
)

// Enum value maps for ContributionState.
var (
	ContributionState_name = map[int32]string{
		0: "STATE_UNDEFINED",
		1: "STATE_REQUEST_APPROVAL",
		2: "STATE_PENDING",
		3: "STATE_APPROVED",
		4: "STATE_REJECTED",
	}
	ContributionState_value = map[string]int32{
		"STATE_UNDEFINED":        0,
		"STATE_REQUEST_APPROVAL": 1,
		"STATE_PENDING":          2,
		"STATE_APPROVED":         3,
		"STATE_REJECTED":         4,
	}
)

func (x ContributionState) Enum() *ContributionState {
	p := new(ContributionState)
	*p = x
	return p
}

func (x ContributionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContributionState) Descriptor() protoreflect.EnumDescriptor {
	return file_transcript_proto_enumTypes[0].Descriptor()
}

func (ContributionState) Type() protoreflect.EnumType {
	return &file_transcript_proto_enumTypes[0]
}

func (x ContributionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContributionState.Descriptor instead.
func (ContributionState) EnumDescriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{0}
}

type AudioQuality int32

const (
	AudioQuality_AUDIO_QUALITY_UNKNOWN AudioQuality = 0
	AudioQuality_POOR                  AudioQuality = 1
	AudioQuality_AVERAGE               AudioQuality = 2
	AudioQuality_GOOD                  AudioQuality = 3
)

// Enum value maps for AudioQuality.
var (
	AudioQuality_name = map[int32]string{
		0: "AUDIO_QUALITY_UNKNOWN",
		1: "POOR",
		2: "AVERAGE",
		3: "GOOD",
	}
	AudioQuality_value = map[string]int32{
		"AUDIO_QUALITY_UNKNOWN": 0,
		"POOR":                  1,
		"AVERAGE":               2,
		"GOOD":                  3,
	}
)

func (x AudioQuality) Enum() *AudioQuality {
	p := new(AudioQuality)
	*p = x
	return p
}

func (x AudioQuality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioQuality) Descriptor() protoreflect.EnumDescriptor {
	return file_transcript_proto_enumTypes[1].Descriptor()
}

func (AudioQuality) Type() protoreflect.EnumType {
	return &file_transcript_proto_enumTypes[1]
}

func (x AudioQuality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioQuality.Descriptor instead.
func (AudioQuality) EnumDescriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{1}
}

type PublicationType int32

const (
	PublicationType_PUBLICATION_TYPE_UNKNOWN PublicationType = 0
	PublicationType_PUBLICATION_TYPE_RADIO   PublicationType = 1
	PublicationType_PUBLICATION_TYPE_PODCAST PublicationType = 2
	PublicationType_PUBLICATION_TYPE_PROMO   PublicationType = 3
	PublicationType_PUBLICATION_TYPE_TV      PublicationType = 4
	PublicationType_PUBLICATION_TYPE_OTHER   PublicationType = 5
)

// Enum value maps for PublicationType.
var (
	PublicationType_name = map[int32]string{
		0: "PUBLICATION_TYPE_UNKNOWN",
		1: "PUBLICATION_TYPE_RADIO",
		2: "PUBLICATION_TYPE_PODCAST",
		3: "PUBLICATION_TYPE_PROMO",
		4: "PUBLICATION_TYPE_TV",
		5: "PUBLICATION_TYPE_OTHER",
	}
	PublicationType_value = map[string]int32{
		"PUBLICATION_TYPE_UNKNOWN": 0,
		"PUBLICATION_TYPE_RADIO":   1,
		"PUBLICATION_TYPE_PODCAST": 2,
		"PUBLICATION_TYPE_PROMO":   3,
		"PUBLICATION_TYPE_TV":      4,
		"PUBLICATION_TYPE_OTHER":   5,
	}
)

func (x PublicationType) Enum() *PublicationType {
	p := new(PublicationType)
	*p = x
	return p
}

func (x PublicationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublicationType) Descriptor() protoreflect.EnumDescriptor {
	return file_transcript_proto_enumTypes[2].Descriptor()
}

func (PublicationType) Type() protoreflect.EnumType {
	return &file_transcript_proto_enumTypes[2]
}

func (x PublicationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublicationType.Descriptor instead.
func (PublicationType) EnumDescriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{2}
}

type Dialog_DialogType int32

const (
	Dialog_UNKNOWN Dialog_DialogType = 0
	Dialog_SONG    Dialog_DialogType = 1
	Dialog_CHAT    Dialog_DialogType = 2
	Dialog_NONE    Dialog_DialogType = 3
	Dialog_GAP     Dialog_DialogType = 4
)

// Enum value maps for Dialog_DialogType.
var (
	Dialog_DialogType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SONG",
		2: "CHAT",
		3: "NONE",
		4: "GAP",
	}
	Dialog_DialogType_value = map[string]int32{
		"UNKNOWN": 0,
		"SONG":    1,
		"CHAT":    2,
		"NONE":    3,
		"GAP":     4,
	}
)

func (x Dialog_DialogType) Enum() *Dialog_DialogType {
	p := new(Dialog_DialogType)
	*p = x
	return p
}

func (x Dialog_DialogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dialog_DialogType) Descriptor() protoreflect.EnumDescriptor {
	return file_transcript_proto_enumTypes[3].Descriptor()
}

func (Dialog_DialogType) Type() protoreflect.EnumType {
	return &file_transcript_proto_enumTypes[3]
}

func (x Dialog_DialogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dialog_DialogType.Descriptor instead.
func (Dialog_DialogType) EnumDescriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{3, 0}
}

type Transcript struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Publication        string                 `protobuf:"bytes,2,opt,name=publication,proto3" json:"publication,omitempty"`
	Series             int32                  `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	Episode            int32                  `protobuf:"varint,4,opt,name=episode,proto3" json:"episode,omitempty"`
	Metadata           map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Transcript         []*Dialog              `protobuf:"bytes,7,rep,name=transcript,proto3" json:"transcript,omitempty"`
	ReleaseDate        string                 `protobuf:"bytes,8,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Synopses           []*Synopsis            `protobuf:"bytes,9,rep,name=synopses,proto3" json:"synopses,omitempty"`
	Contributors       []string               `protobuf:"bytes,10,rep,name=contributors,proto3" json:"contributors,omitempty"`
	Incomplete         bool                   `protobuf:"varint,11,opt,name=incomplete,proto3" json:"incomplete,omitempty"`
	RawTranscript      string                 `protobuf:"bytes,12,opt,name=raw_transcript,json=rawTranscript,proto3" json:"raw_transcript,omitempty"`
	ShortId            string                 `protobuf:"bytes,14,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	Trivia             []*Trivia              `protobuf:"bytes,15,rep,name=trivia,proto3" json:"trivia,omitempty"`
	Actors             []string               `protobuf:"bytes,16,rep,name=actors,proto3" json:"actors,omitempty"`
	OffsetAccuracyPcnt int32                  `protobuf:"varint,17,opt,name=offset_accuracy_pcnt,json=offsetAccuracyPcnt,proto3" json:"offset_accuracy_pcnt,omitempty"`
	Name               string                 `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`
	Version            string                 `protobuf:"bytes,19,opt,name=version,proto3" json:"version,omitempty"`
	Bestof             bool                   `protobuf:"varint,20,opt,name=bestof,proto3" json:"bestof,omitempty"`
	Special            bool                   `protobuf:"varint,21,opt,name=special,proto3" json:"special,omitempty"`
	Locked             bool                   `protobuf:"varint,22,opt,name=locked,proto3" json:"locked,omitempty"`
	Summary            string                 `protobuf:"bytes,23,opt,name=summary,proto3" json:"summary,omitempty"`
	AudioQuality       AudioQuality           `protobuf:"varint,24,opt,name=audio_quality,json=audioQuality,proto3,enum=rsk.AudioQuality" json:"audio_quality,omitempty"`
	Media              *Media                 `protobuf:"bytes,26,opt,name=media,proto3" json:"media,omitempty"`
	PublicationType    PublicationType        `protobuf:"varint,27,opt,name=publication_type,json=publicationType,proto3,enum=rsk.PublicationType" json:"publication_type,omitempty"`
	Ratings            *Ratings               `protobuf:"bytes,28,opt,name=ratings,proto3" json:"ratings,omitempty"`
	Tags               []*Tag                 `protobuf:"bytes,29,rep,name=tags,proto3" json:"tags,omitempty"`
	CompletionReports  []string               `protobuf:"bytes,30,rep,name=completion_reports,json=completionReports,proto3" json:"completion_reports,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Transcript) Reset() {
	*x = Transcript{}
	mi := &file_transcript_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transcript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcript) ProtoMessage() {}

func (x *Transcript) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcript.ProtoReflect.Descriptor instead.
func (*Transcript) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{0}
}

func (x *Transcript) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transcript) GetPublication() string {
	if x != nil {
		return x.Publication
	}
	return ""
}

func (x *Transcript) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *Transcript) GetEpisode() int32 {
	if x != nil {
		return x.Episode
	}
	return 0
}

func (x *Transcript) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Transcript) GetTranscript() []*Dialog {
	if x != nil {
		return x.Transcript
	}
	return nil
}

func (x *Transcript) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Transcript) GetSynopses() []*Synopsis {
	if x != nil {
		return x.Synopses
	}
	return nil
}

func (x *Transcript) GetContributors() []string {
	if x != nil {
		return x.Contributors
	}
	return nil
}

func (x *Transcript) GetIncomplete() bool {
	if x != nil {
		return x.Incomplete
	}
	return false
}

func (x *Transcript) GetRawTranscript() string {
	if x != nil {
		return x.RawTranscript
	}
	return ""
}

func (x *Transcript) GetShortId() string {
	if x != nil {
		return x.ShortId
	}
	return ""
}

func (x *Transcript) GetTrivia() []*Trivia {
	if x != nil {
		return x.Trivia
	}
	return nil
}

func (x *Transcript) GetActors() []string {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *Transcript) GetOffsetAccuracyPcnt() int32 {
	if x != nil {
		return x.OffsetAccuracyPcnt
	}
	return 0
}

func (x *Transcript) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Transcript) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Transcript) GetBestof() bool {
	if x != nil {
		return x.Bestof
	}
	return false
}

func (x *Transcript) GetSpecial() bool {
	if x != nil {
		return x.Special
	}
	return false
}

func (x *Transcript) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *Transcript) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Transcript) GetAudioQuality() AudioQuality {
	if x != nil {
		return x.AudioQuality
	}
	return AudioQuality_AUDIO_QUALITY_UNKNOWN
}

func (x *Transcript) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Transcript) GetPublicationType() PublicationType {
	if x != nil {
		return x.PublicationType
	}
	return PublicationType_PUBLICATION_TYPE_UNKNOWN
}

func (x *Transcript) GetRatings() *Ratings {
	if x != nil {
		return x.Ratings
	}
	return nil
}

func (x *Transcript) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Transcript) GetCompletionReports() []string {
	if x != nil {
		return x.CompletionReports
	}
	return nil
}

type Media struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Video           bool                   `protobuf:"varint,1,opt,name=video,proto3" json:"video,omitempty"`
	Audio           bool                   `protobuf:"varint,2,opt,name=audio,proto3" json:"audio,omitempty"`
	AudioRestricted bool                   `protobuf:"varint,3,opt,name=audio_restricted,json=audioRestricted,proto3" json:"audio_restricted,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_transcript_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{1}
}

func (x *Media) GetVideo() bool {
	if x != nil {
		return x.Video
	}
	return false
}

func (x *Media) GetAudio() bool {
	if x != nil {
		return x.Audio
	}
	return false
}

func (x *Media) GetAudioRestricted() bool {
	if x != nil {
		return x.AudioRestricted
	}
	return false
}

type ShortTranscript struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Publication         string                 `protobuf:"bytes,2,opt,name=publication,proto3" json:"publication,omitempty"`
	Series              int32                  `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	Episode             int32                  `protobuf:"varint,4,opt,name=episode,proto3" json:"episode,omitempty"`
	TranscriptAvailable bool                   `protobuf:"varint,5,opt,name=transcript_available,json=transcriptAvailable,proto3" json:"transcript_available,omitempty"`
	Incomplete          bool                   `protobuf:"varint,6,opt,name=incomplete,proto3" json:"incomplete,omitempty"`
	ReleaseDate         string                 `protobuf:"bytes,7,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Summary             string                 `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty"`
	Synopsis            []*Synopsis            `protobuf:"bytes,9,rep,name=synopsis,proto3" json:"synopsis,omitempty"`
	TriviaAvailable     bool                   `protobuf:"varint,10,opt,name=trivia_available,json=triviaAvailable,proto3" json:"trivia_available,omitempty"`
	Actors              []string               `protobuf:"bytes,11,rep,name=actors,proto3" json:"actors,omitempty"`
	ShortId             string                 `protobuf:"bytes,13,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	OffsetAccuracyPcnt  int32                  `protobuf:"varint,14,opt,name=offset_accuracy_pcnt,json=offsetAccuracyPcnt,proto3" json:"offset_accuracy_pcnt,omitempty"`
	Name                string                 `protobuf:"bytes,15,opt,name=name,proto3" json:"name,omitempty"`
	Version             string                 `protobuf:"bytes,16,opt,name=version,proto3" json:"version,omitempty"`
	Metadata            map[string]string      `protobuf:"bytes,17,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Bestof              bool                   `protobuf:"varint,18,opt,name=bestof,proto3" json:"bestof,omitempty"`
	Special             bool                   `protobuf:"varint,19,opt,name=special,proto3" json:"special,omitempty"`
	AudioQuality        AudioQuality           `protobuf:"varint,20,opt,name=audio_quality,json=audioQuality,proto3,enum=rsk.AudioQuality" json:"audio_quality,omitempty"`
	Media               *Media                 `protobuf:"bytes,22,opt,name=media,proto3" json:"media,omitempty"`
	PublicationType     PublicationType        `protobuf:"varint,23,opt,name=publication_type,json=publicationType,proto3,enum=rsk.PublicationType" json:"publication_type,omitempty"`
	RatingScore         float32                `protobuf:"fixed32,24,opt,name=rating_score,json=ratingScore,proto3" json:"rating_score,omitempty"`
	NumRatingScores     int32                  `protobuf:"varint,25,opt,name=num_rating_scores,json=numRatingScores,proto3" json:"num_rating_scores,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ShortTranscript) Reset() {
	*x = ShortTranscript{}
	mi := &file_transcript_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortTranscript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortTranscript) ProtoMessage() {}

func (x *ShortTranscript) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortTranscript.ProtoReflect.Descriptor instead.
func (*ShortTranscript) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{2}
}

func (x *ShortTranscript) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShortTranscript) GetPublication() string {
	if x != nil {
		return x.Publication
	}
	return ""
}

func (x *ShortTranscript) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *ShortTranscript) GetEpisode() int32 {
	if x != nil {
		return x.Episode
	}
	return 0
}

func (x *ShortTranscript) GetTranscriptAvailable() bool {
	if x != nil {
		return x.TranscriptAvailable
	}
	return false
}

func (x *ShortTranscript) GetIncomplete() bool {
	if x != nil {
		return x.Incomplete
	}
	return false
}

func (x *ShortTranscript) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *ShortTranscript) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ShortTranscript) GetSynopsis() []*Synopsis {
	if x != nil {
		return x.Synopsis
	}
	return nil
}

func (x *ShortTranscript) GetTriviaAvailable() bool {
	if x != nil {
		return x.TriviaAvailable
	}
	return false
}

func (x *ShortTranscript) GetActors() []string {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *ShortTranscript) GetShortId() string {
	if x != nil {
		return x.ShortId
	}
	return ""
}

func (x *ShortTranscript) GetOffsetAccuracyPcnt() int32 {
	if x != nil {
		return x.OffsetAccuracyPcnt
	}
	return 0
}

func (x *ShortTranscript) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShortTranscript) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ShortTranscript) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ShortTranscript) GetBestof() bool {
	if x != nil {
		return x.Bestof
	}
	return false
}

func (x *ShortTranscript) GetSpecial() bool {
	if x != nil {
		return x.Special
	}
	return false
}

func (x *ShortTranscript) GetAudioQuality() AudioQuality {
	if x != nil {
		return x.AudioQuality
	}
	return AudioQuality_AUDIO_QUALITY_UNKNOWN
}

func (x *ShortTranscript) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ShortTranscript) GetPublicationType() PublicationType {
	if x != nil {
		return x.PublicationType
	}
	return PublicationType_PUBLICATION_TYPE_UNKNOWN
}

func (x *ShortTranscript) GetRatingScore() float32 {
	if x != nil {
		return x.RatingScore
	}
	return 0
}

func (x *ShortTranscript) GetNumRatingScores() int32 {
	if x != nil {
		return x.NumRatingScores
	}
	return 0
}

type Dialog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pos            int32                  `protobuf:"varint,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Type           Dialog_DialogType      `protobuf:"varint,3,opt,name=type,proto3,enum=rsk.Dialog_DialogType" json:"type,omitempty"`
	Actor          string                 `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	Content        string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsMatchedRow   bool                   `protobuf:"varint,8,opt,name=is_matched_row,json=isMatchedRow,proto3" json:"is_matched_row,omitempty"`
	Notable        bool                   `protobuf:"varint,9,opt,name=notable,proto3" json:"notable,omitempty"`
	OffsetSec      int64                  `protobuf:"varint,10,opt,name=offset_sec,json=offsetSec,proto3" json:"offset_sec,omitempty"` //deprecated
	OffsetInferred bool                   `protobuf:"varint,11,opt,name=offset_inferred,json=offsetInferred,proto3" json:"offset_inferred,omitempty"`
	OffsetDistance int32                  `protobuf:"varint,12,opt,name=offset_distance,json=offsetDistance,proto3" json:"offset_distance,omitempty"`
	OffsetMs       int32                  `protobuf:"varint,13,opt,name=offset_ms,json=offsetMs,proto3" json:"offset_ms,omitempty"`
	DurationMs     int32                  `protobuf:"varint,14,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Placeholder    bool                   `protobuf:"varint,15,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Dialog) Reset() {
	*x = Dialog{}
	mi := &file_transcript_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialog) ProtoMessage() {}

func (x *Dialog) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialog.ProtoReflect.Descriptor instead.
func (*Dialog) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{3}
}

func (x *Dialog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dialog) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *Dialog) GetType() Dialog_DialogType {
	if x != nil {
		return x.Type
	}
	return Dialog_UNKNOWN
}

func (x *Dialog) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *Dialog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Dialog) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Dialog) GetIsMatchedRow() bool {
	if x != nil {
		return x.IsMatchedRow
	}
	return false
}

func (x *Dialog) GetNotable() bool {
	if x != nil {
		return x.Notable
	}
	return false
}

func (x *Dialog) GetOffsetSec() int64 {
	if x != nil {
		return x.OffsetSec
	}
	return 0
}

func (x *Dialog) GetOffsetInferred() bool {
	if x != nil {
		return x.OffsetInferred
	}
	return false
}

func (x *Dialog) GetOffsetDistance() int32 {
	if x != nil {
		return x.OffsetDistance
	}
	return 0
}

func (x *Dialog) GetOffsetMs() int32 {
	if x != nil {
		return x.OffsetMs
	}
	return 0
}

func (x *Dialog) GetDurationMs() int32 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *Dialog) GetPlaceholder() bool {
	if x != nil {
		return x.Placeholder
	}
	return false
}

type Synopsis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	StartPos      int32                  `protobuf:"varint,2,opt,name=start_pos,json=startPos,proto3" json:"start_pos,omitempty"`
	EndPos        int32                  `protobuf:"varint,3,opt,name=end_pos,json=endPos,proto3" json:"end_pos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Synopsis) Reset() {
	*x = Synopsis{}
	mi := &file_transcript_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Synopsis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Synopsis) ProtoMessage() {}

func (x *Synopsis) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Synopsis.ProtoReflect.Descriptor instead.
func (*Synopsis) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{4}
}

func (x *Synopsis) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Synopsis) GetStartPos() int32 {
	if x != nil {
		return x.StartPos
	}
	return 0
}

func (x *Synopsis) GetEndPos() int32 {
	if x != nil {
		return x.EndPos
	}
	return 0
}

type Trivia struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	StartPos      int32                  `protobuf:"varint,2,opt,name=start_pos,json=startPos,proto3" json:"start_pos,omitempty"`
	EndPos        int32                  `protobuf:"varint,3,opt,name=end_pos,json=endPos,proto3" json:"end_pos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trivia) Reset() {
	*x = Trivia{}
	mi := &file_transcript_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trivia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trivia) ProtoMessage() {}

func (x *Trivia) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trivia.ProtoReflect.Descriptor instead.
func (*Trivia) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{5}
}

func (x *Trivia) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Trivia) GetStartPos() int32 {
	if x != nil {
		return x.StartPos
	}
	return 0
}

func (x *Trivia) GetEndPos() int32 {
	if x != nil {
		return x.EndPos
	}
	return 0
}

type GetTranscriptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epid          string                 `protobuf:"bytes,1,opt,name=epid,proto3" json:"epid,omitempty"`
	WithRaw       bool                   `protobuf:"varint,2,opt,name=with_raw,json=withRaw,proto3" json:"with_raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranscriptRequest) Reset() {
	*x = GetTranscriptRequest{}
	mi := &file_transcript_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptRequest) ProtoMessage() {}

func (x *GetTranscriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptRequest.ProtoReflect.Descriptor instead.
func (*GetTranscriptRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{6}
}

func (x *GetTranscriptRequest) GetEpid() string {
	if x != nil {
		return x.Epid
	}
	return ""
}

func (x *GetTranscriptRequest) GetWithRaw() bool {
	if x != nil {
		return x.WithRaw
	}
	return false
}

type DialogRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int32                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int32                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DialogRange) Reset() {
	*x = DialogRange{}
	mi := &file_transcript_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DialogRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogRange) ProtoMessage() {}

func (x *DialogRange) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogRange.ProtoReflect.Descriptor instead.
func (*DialogRange) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{7}
}

func (x *DialogRange) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DialogRange) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type GetTranscriptDialogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Epid  string                 `protobuf:"bytes,1,opt,name=epid,proto3" json:"epid,omitempty"`
	// Deprecated: Marked as deprecated in transcript.proto.
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos,omitempty"`
	// Deprecated: Marked as deprecated in transcript.proto.
	NumContextLines int32        `protobuf:"varint,3,opt,name=num_context_lines,json=numContextLines,proto3" json:"num_context_lines,omitempty"`
	Range           *DialogRange `protobuf:"bytes,4,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTranscriptDialogRequest) Reset() {
	*x = GetTranscriptDialogRequest{}
	mi := &file_transcript_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptDialogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptDialogRequest) ProtoMessage() {}

func (x *GetTranscriptDialogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptDialogRequest.ProtoReflect.Descriptor instead.
func (*GetTranscriptDialogRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{8}
}

func (x *GetTranscriptDialogRequest) GetEpid() string {
	if x != nil {
		return x.Epid
	}
	return ""
}

// Deprecated: Marked as deprecated in transcript.proto.
func (x *GetTranscriptDialogRequest) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

// Deprecated: Marked as deprecated in transcript.proto.
func (x *GetTranscriptDialogRequest) GetNumContextLines() int32 {
	if x != nil {
		return x.NumContextLines
	}
	return 0
}

func (x *GetTranscriptDialogRequest) GetRange() *DialogRange {
	if x != nil {
		return x.Range
	}
	return nil
}

type ListTranscriptsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTranscriptsRequest) Reset() {
	*x = ListTranscriptsRequest{}
	mi := &file_transcript_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTranscriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTranscriptsRequest) ProtoMessage() {}

func (x *ListTranscriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTranscriptsRequest.ProtoReflect.Descriptor instead.
func (*ListTranscriptsRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{9}
}

type TranscriptList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Episodes      []*ShortTranscript     `protobuf:"bytes,1,rep,name=episodes,proto3" json:"episodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptList) Reset() {
	*x = TranscriptList{}
	mi := &file_transcript_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptList) ProtoMessage() {}

func (x *TranscriptList) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptList.ProtoReflect.Descriptor instead.
func (*TranscriptList) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{10}
}

func (x *TranscriptList) GetEpisodes() []*ShortTranscript {
	if x != nil {
		return x.Episodes
	}
	return nil
}

type Ratings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scores        map[string]float32     `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	ScoreAvg      float32                `protobuf:"fixed32,2,opt,name=score_avg,json=scoreAvg,proto3" json:"score_avg,omitempty"`
	NumScores     int32                  `protobuf:"varint,3,opt,name=num_scores,json=numScores,proto3" json:"num_scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ratings) Reset() {
	*x = Ratings{}
	mi := &file_transcript_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ratings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ratings) ProtoMessage() {}

func (x *Ratings) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ratings.ProtoReflect.Descriptor instead.
func (*Ratings) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{11}
}

func (x *Ratings) GetScores() map[string]float32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *Ratings) GetScoreAvg() float32 {
	if x != nil {
		return x.ScoreAvg
	}
	return 0
}

func (x *Ratings) GetNumScores() int32 {
	if x != nil {
		return x.NumScores
	}
	return 0
}

type ChunkStates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	States        []ContributionState    `protobuf:"varint,1,rep,packed,name=states,proto3,enum=rsk.ContributionState" json:"states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkStates) Reset() {
	*x = ChunkStates{}
	mi := &file_transcript_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkStates) ProtoMessage() {}

func (x *ChunkStates) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkStates.ProtoReflect.Descriptor instead.
func (*ChunkStates) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{12}
}

func (x *ChunkStates) GetStates() []ContributionState {
	if x != nil {
		return x.States
	}
	return nil
}

type ChunkedTranscriptStats struct {
	state                           protoimpl.MessageState  `protogen:"open.v1"`
	Id                              string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Publication                     string                  `protobuf:"bytes,2,opt,name=publication,proto3" json:"publication,omitempty"`
	Series                          int32                   `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	Episode                         int32                   `protobuf:"varint,4,opt,name=episode,proto3" json:"episode,omitempty"`
	ChunkContributions              map[string]*ChunkStates `protobuf:"bytes,5,rep,name=chunk_contributions,json=chunkContributions,proto3" json:"chunk_contributions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NumChunks                       int32                   `protobuf:"varint,6,opt,name=num_chunks,json=numChunks,proto3" json:"num_chunks,omitempty"`
	NumContributions                int32                   `protobuf:"varint,7,opt,name=num_contributions,json=numContributions,proto3" json:"num_contributions,omitempty"`
	NumPendingContributions         int32                   `protobuf:"varint,8,opt,name=num_pending_contributions,json=numPendingContributions,proto3" json:"num_pending_contributions,omitempty"`
	NumRequestApprovalContributions int32                   `protobuf:"varint,9,opt,name=num_request_approval_contributions,json=numRequestApprovalContributions,proto3" json:"num_request_approval_contributions,omitempty"`
	NumApprovedContributions        int32                   `protobuf:"varint,10,opt,name=num_approved_contributions,json=numApprovedContributions,proto3" json:"num_approved_contributions,omitempty"`
	NumRejectedContributions        int32                   `protobuf:"varint,11,opt,name=num_rejected_contributions,json=numRejectedContributions,proto3" json:"num_rejected_contributions,omitempty"`
	Name                            string                  `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ChunkedTranscriptStats) Reset() {
	*x = ChunkedTranscriptStats{}
	mi := &file_transcript_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkedTranscriptStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkedTranscriptStats) ProtoMessage() {}

func (x *ChunkedTranscriptStats) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkedTranscriptStats.ProtoReflect.Descriptor instead.
func (*ChunkedTranscriptStats) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{13}
}

func (x *ChunkedTranscriptStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChunkedTranscriptStats) GetPublication() string {
	if x != nil {
		return x.Publication
	}
	return ""
}

func (x *ChunkedTranscriptStats) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetEpisode() int32 {
	if x != nil {
		return x.Episode
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetChunkContributions() map[string]*ChunkStates {
	if x != nil {
		return x.ChunkContributions
	}
	return nil
}

func (x *ChunkedTranscriptStats) GetNumChunks() int32 {
	if x != nil {
		return x.NumChunks
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetNumContributions() int32 {
	if x != nil {
		return x.NumContributions
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetNumPendingContributions() int32 {
	if x != nil {
		return x.NumPendingContributions
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetNumRequestApprovalContributions() int32 {
	if x != nil {
		return x.NumRequestApprovalContributions
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetNumApprovedContributions() int32 {
	if x != nil {
		return x.NumApprovedContributions
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetNumRejectedContributions() int32 {
	if x != nil {
		return x.NumRejectedContributions
	}
	return 0
}

func (x *ChunkedTranscriptStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChunkedTranscriptList struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Chunked       []*ChunkedTranscriptStats `protobuf:"bytes,1,rep,name=chunked,proto3" json:"chunked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkedTranscriptList) Reset() {
	*x = ChunkedTranscriptList{}
	mi := &file_transcript_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkedTranscriptList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkedTranscriptList) ProtoMessage() {}

func (x *ChunkedTranscriptList) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkedTranscriptList.ProtoReflect.Descriptor instead.
func (*ChunkedTranscriptList) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{14}
}

func (x *ChunkedTranscriptList) GetChunked() []*ChunkedTranscriptStats {
	if x != nil {
		return x.Chunked
	}
	return nil
}

type ChunkStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	NumPending           int32                  `protobuf:"varint,1,opt,name=num_pending,json=numPending,proto3" json:"num_pending,omitempty"`
	NumSubmitted         int32                  `protobuf:"varint,2,opt,name=num_submitted,json=numSubmitted,proto3" json:"num_submitted,omitempty"`
	SuggestedNextChunkId string                 `protobuf:"bytes,3,opt,name=suggested_next_chunk_id,json=suggestedNextChunkId,proto3" json:"suggested_next_chunk_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ChunkStats) Reset() {
	*x = ChunkStats{}
	mi := &file_transcript_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkStats) ProtoMessage() {}

func (x *ChunkStats) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkStats.ProtoReflect.Descriptor instead.
func (*ChunkStats) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{15}
}

func (x *ChunkStats) GetNumPending() int32 {
	if x != nil {
		return x.NumPending
	}
	return 0
}

func (x *ChunkStats) GetNumSubmitted() int32 {
	if x != nil {
		return x.NumSubmitted
	}
	return 0
}

func (x *ChunkStats) GetSuggestedNextChunkId() string {
	if x != nil {
		return x.SuggestedNextChunkId
	}
	return ""
}

type GetTranscriptChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranscriptChunkRequest) Reset() {
	*x = GetTranscriptChunkRequest{}
	mi := &file_transcript_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptChunkRequest) ProtoMessage() {}

func (x *GetTranscriptChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptChunkRequest.ProtoReflect.Descriptor instead.
func (*GetTranscriptChunkRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{16}
}

func (x *GetTranscriptChunkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Chunk struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChunkedTranscriptId string                 `protobuf:"bytes,2,opt,name=chunked_transcript_id,json=chunkedTranscriptId,proto3" json:"chunked_transcript_id,omitempty"`
	Raw                 string                 `protobuf:"bytes,3,opt,name=raw,proto3" json:"raw,omitempty"`
	// Deprecated: Marked as deprecated in transcript.proto.
	AudioClipUri     string `protobuf:"bytes,4,opt,name=audio_clip_uri,json=audioClipUri,proto3" json:"audio_clip_uri,omitempty"`
	NumContributions int32  `protobuf:"varint,5,opt,name=num_contributions,json=numContributions,proto3" json:"num_contributions,omitempty"`
	EpisodeId        string `protobuf:"bytes,6,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	StartTimeMs      int32  `protobuf:"varint,7,opt,name=start_time_ms,json=startTimeMs,proto3" json:"start_time_ms,omitempty"`
	EndTimeMs        int32  `protobuf:"varint,8,opt,name=end_time_ms,json=endTimeMs,proto3" json:"end_time_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_transcript_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{17}
}

func (x *Chunk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chunk) GetChunkedTranscriptId() string {
	if x != nil {
		return x.ChunkedTranscriptId
	}
	return ""
}

func (x *Chunk) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

// Deprecated: Marked as deprecated in transcript.proto.
func (x *Chunk) GetAudioClipUri() string {
	if x != nil {
		return x.AudioClipUri
	}
	return ""
}

func (x *Chunk) GetNumContributions() int32 {
	if x != nil {
		return x.NumContributions
	}
	return 0
}

func (x *Chunk) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

func (x *Chunk) GetStartTimeMs() int32 {
	if x != nil {
		return x.StartTimeMs
	}
	return 0
}

func (x *Chunk) GetEndTimeMs() int32 {
	if x != nil {
		return x.EndTimeMs
	}
	return 0
}

type ListTranscriptChunksRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ChunkedTranscriptId string                 `protobuf:"bytes,1,opt,name=chunked_transcript_id,json=chunkedTranscriptId,proto3" json:"chunked_transcript_id,omitempty"`
	Filter              string                 `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	SortField           string                 `protobuf:"bytes,3,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
	SortDirection       string                 `protobuf:"bytes,4,opt,name=sort_direction,json=sortDirection,proto3" json:"sort_direction,omitempty"`
	Page                int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize            int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListTranscriptChunksRequest) Reset() {
	*x = ListTranscriptChunksRequest{}
	mi := &file_transcript_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTranscriptChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTranscriptChunksRequest) ProtoMessage() {}

func (x *ListTranscriptChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTranscriptChunksRequest.ProtoReflect.Descriptor instead.
func (*ListTranscriptChunksRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{18}
}

func (x *ListTranscriptChunksRequest) GetChunkedTranscriptId() string {
	if x != nil {
		return x.ChunkedTranscriptId
	}
	return ""
}

func (x *ListTranscriptChunksRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTranscriptChunksRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListTranscriptChunksRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

func (x *ListTranscriptChunksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTranscriptChunksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TranscriptChunkList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunks        []*Chunk               `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptChunkList) Reset() {
	*x = TranscriptChunkList{}
	mi := &file_transcript_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptChunkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptChunkList) ProtoMessage() {}

func (x *TranscriptChunkList) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptChunkList.ProtoReflect.Descriptor instead.
func (*TranscriptChunkList) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{19}
}

func (x *TranscriptChunkList) GetChunks() []*Chunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type ListChunkContributionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        string                 `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	SortField     string                 `protobuf:"bytes,2,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
	SortDirection string                 `protobuf:"bytes,3,opt,name=sort_direction,json=sortDirection,proto3" json:"sort_direction,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChunkContributionsRequest) Reset() {
	*x = ListChunkContributionsRequest{}
	mi := &file_transcript_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChunkContributionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChunkContributionsRequest) ProtoMessage() {}

func (x *ListChunkContributionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChunkContributionsRequest.ProtoReflect.Descriptor instead.
func (*ListChunkContributionsRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{20}
}

func (x *ListChunkContributionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListChunkContributionsRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListChunkContributionsRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

func (x *ListChunkContributionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListChunkContributionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ChunkContributionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contributions []*ChunkContribution   `protobuf:"bytes,1,rep,name=contributions,proto3" json:"contributions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkContributionList) Reset() {
	*x = ChunkContributionList{}
	mi := &file_transcript_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkContributionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkContributionList) ProtoMessage() {}

func (x *ChunkContributionList) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkContributionList.ProtoReflect.Descriptor instead.
func (*ChunkContributionList) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{21}
}

func (x *ChunkContributionList) GetContributions() []*ChunkContribution {
	if x != nil {
		return x.Contributions
	}
	return nil
}

type ChunkContribution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChunkId       string                 `protobuf:"bytes,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Transcript    string                 `protobuf:"bytes,3,opt,name=transcript,proto3" json:"transcript,omitempty"`
	State         ContributionState      `protobuf:"varint,5,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	Author        *Author                `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StateComment  string                 `protobuf:"bytes,8,opt,name=state_comment,json=stateComment,proto3" json:"state_comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkContribution) Reset() {
	*x = ChunkContribution{}
	mi := &file_transcript_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkContribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkContribution) ProtoMessage() {}

func (x *ChunkContribution) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkContribution.ProtoReflect.Descriptor instead.
func (*ChunkContribution) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{22}
}

func (x *ChunkContribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChunkContribution) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkContribution) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *ChunkContribution) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *ChunkContribution) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ChunkContribution) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ChunkContribution) GetStateComment() string {
	if x != nil {
		return x.StateComment
	}
	return ""
}

type ShortChunkContribution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChunkId       string                 `protobuf:"bytes,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	AuthorId      string                 `protobuf:"bytes,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	State         ContributionState      `protobuf:"varint,5,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	StateComment  string                 `protobuf:"bytes,6,opt,name=state_comment,json=stateComment,proto3" json:"state_comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortChunkContribution) Reset() {
	*x = ShortChunkContribution{}
	mi := &file_transcript_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortChunkContribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortChunkContribution) ProtoMessage() {}

func (x *ShortChunkContribution) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortChunkContribution.ProtoReflect.Descriptor instead.
func (*ShortChunkContribution) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{23}
}

func (x *ShortChunkContribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShortChunkContribution) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ShortChunkContribution) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *ShortChunkContribution) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *ShortChunkContribution) GetStateComment() string {
	if x != nil {
		return x.StateComment
	}
	return ""
}

type ChunkChunkContributionList struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Contributions []*ShortChunkContribution `protobuf:"bytes,1,rep,name=contributions,proto3" json:"contributions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkChunkContributionList) Reset() {
	*x = ChunkChunkContributionList{}
	mi := &file_transcript_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkChunkContributionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkChunkContributionList) ProtoMessage() {}

func (x *ChunkChunkContributionList) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkChunkContributionList.ProtoReflect.Descriptor instead.
func (*ChunkChunkContributionList) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{24}
}

func (x *ChunkChunkContributionList) GetContributions() []*ShortChunkContribution {
	if x != nil {
		return x.Contributions
	}
	return nil
}

type GetChunkContributionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContributionId string                 `protobuf:"bytes,1,opt,name=contribution_id,json=contributionId,proto3" json:"contribution_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetChunkContributionRequest) Reset() {
	*x = GetChunkContributionRequest{}
	mi := &file_transcript_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkContributionRequest) ProtoMessage() {}

func (x *GetChunkContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkContributionRequest.ProtoReflect.Descriptor instead.
func (*GetChunkContributionRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{25}
}

func (x *GetChunkContributionRequest) GetContributionId() string {
	if x != nil {
		return x.ContributionId
	}
	return ""
}

type CreateChunkContributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Transcript    string                 `protobuf:"bytes,2,opt,name=transcript,proto3" json:"transcript,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChunkContributionRequest) Reset() {
	*x = CreateChunkContributionRequest{}
	mi := &file_transcript_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChunkContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChunkContributionRequest) ProtoMessage() {}

func (x *CreateChunkContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChunkContributionRequest.ProtoReflect.Descriptor instead.
func (*CreateChunkContributionRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{26}
}

func (x *CreateChunkContributionRequest) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *CreateChunkContributionRequest) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

type UpdateChunkContributionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContributionId string                 `protobuf:"bytes,1,opt,name=contribution_id,json=contributionId,proto3" json:"contribution_id,omitempty"`
	Transcript     string                 `protobuf:"bytes,2,opt,name=transcript,proto3" json:"transcript,omitempty"`
	State          ContributionState      `protobuf:"varint,3,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateChunkContributionRequest) Reset() {
	*x = UpdateChunkContributionRequest{}
	mi := &file_transcript_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChunkContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChunkContributionRequest) ProtoMessage() {}

func (x *UpdateChunkContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChunkContributionRequest.ProtoReflect.Descriptor instead.
func (*UpdateChunkContributionRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateChunkContributionRequest) GetContributionId() string {
	if x != nil {
		return x.ContributionId
	}
	return ""
}

func (x *UpdateChunkContributionRequest) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *UpdateChunkContributionRequest) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

type DeleteChunkContributionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContributionId string                 `protobuf:"bytes,1,opt,name=contribution_id,json=contributionId,proto3" json:"contribution_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteChunkContributionRequest) Reset() {
	*x = DeleteChunkContributionRequest{}
	mi := &file_transcript_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChunkContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkContributionRequest) ProtoMessage() {}

func (x *DeleteChunkContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkContributionRequest.ProtoReflect.Descriptor instead.
func (*DeleteChunkContributionRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteChunkContributionRequest) GetContributionId() string {
	if x != nil {
		return x.ContributionId
	}
	return ""
}

type RequestChunkContributionStateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContributionId string                 `protobuf:"bytes,1,opt,name=contribution_id,json=contributionId,proto3" json:"contribution_id,omitempty"`
	RequestState   ContributionState      `protobuf:"varint,2,opt,name=request_state,json=requestState,proto3,enum=rsk.ContributionState" json:"request_state,omitempty"`
	Comment        string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RequestChunkContributionStateRequest) Reset() {
	*x = RequestChunkContributionStateRequest{}
	mi := &file_transcript_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestChunkContributionStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestChunkContributionStateRequest) ProtoMessage() {}

func (x *RequestChunkContributionStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestChunkContributionStateRequest.ProtoReflect.Descriptor instead.
func (*RequestChunkContributionStateRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{29}
}

func (x *RequestChunkContributionStateRequest) GetContributionId() string {
	if x != nil {
		return x.ContributionId
	}
	return ""
}

func (x *RequestChunkContributionStateRequest) GetRequestState() ContributionState {
	if x != nil {
		return x.RequestState
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *RequestChunkContributionStateRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CreateTranscriptChangeRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Epid              string                 `protobuf:"bytes,1,opt,name=epid,proto3" json:"epid,omitempty"`
	Transcript        string                 `protobuf:"bytes,2,opt,name=transcript,proto3" json:"transcript,omitempty"`
	TranscriptVersion string                 `protobuf:"bytes,3,opt,name=transcript_version,json=transcriptVersion,proto3" json:"transcript_version,omitempty"`
	Summary           string                 `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateTranscriptChangeRequest) Reset() {
	*x = CreateTranscriptChangeRequest{}
	mi := &file_transcript_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTranscriptChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTranscriptChangeRequest) ProtoMessage() {}

func (x *CreateTranscriptChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTranscriptChangeRequest.ProtoReflect.Descriptor instead.
func (*CreateTranscriptChangeRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{30}
}

func (x *CreateTranscriptChangeRequest) GetEpid() string {
	if x != nil {
		return x.Epid
	}
	return ""
}

func (x *CreateTranscriptChangeRequest) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *CreateTranscriptChangeRequest) GetTranscriptVersion() string {
	if x != nil {
		return x.TranscriptVersion
	}
	return ""
}

func (x *CreateTranscriptChangeRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type ListTranscriptChangesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        string                 `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	SortField     string                 `protobuf:"bytes,2,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
	SortDirection string                 `protobuf:"bytes,3,opt,name=sort_direction,json=sortDirection,proto3" json:"sort_direction,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTranscriptChangesRequest) Reset() {
	*x = ListTranscriptChangesRequest{}
	mi := &file_transcript_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTranscriptChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTranscriptChangesRequest) ProtoMessage() {}

func (x *ListTranscriptChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTranscriptChangesRequest.ProtoReflect.Descriptor instead.
func (*ListTranscriptChangesRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{31}
}

func (x *ListTranscriptChangesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTranscriptChangesRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListTranscriptChangesRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

func (x *ListTranscriptChangesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTranscriptChangesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateTranscriptChangeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Transcript      string                 `protobuf:"bytes,2,opt,name=transcript,proto3" json:"transcript,omitempty"`
	State           ContributionState      `protobuf:"varint,3,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	PointsOnApprove float32                `protobuf:"fixed32,4,opt,name=points_on_approve,json=pointsOnApprove,proto3" json:"points_on_approve,omitempty"`
	Summary         string                 `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateTranscriptChangeRequest) Reset() {
	*x = UpdateTranscriptChangeRequest{}
	mi := &file_transcript_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTranscriptChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTranscriptChangeRequest) ProtoMessage() {}

func (x *UpdateTranscriptChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTranscriptChangeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTranscriptChangeRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateTranscriptChangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTranscriptChangeRequest) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *UpdateTranscriptChangeRequest) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *UpdateTranscriptChangeRequest) GetPointsOnApprove() float32 {
	if x != nil {
		return x.PointsOnApprove
	}
	return 0
}

func (x *UpdateTranscriptChangeRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type DeleteTranscriptChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTranscriptChangeRequest) Reset() {
	*x = DeleteTranscriptChangeRequest{}
	mi := &file_transcript_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTranscriptChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTranscriptChangeRequest) ProtoMessage() {}

func (x *DeleteTranscriptChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTranscriptChangeRequest.ProtoReflect.Descriptor instead.
func (*DeleteTranscriptChangeRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteTranscriptChangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TranscriptChangeList struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Changes       []*ShortTranscriptChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptChangeList) Reset() {
	*x = TranscriptChangeList{}
	mi := &file_transcript_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptChangeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptChangeList) ProtoMessage() {}

func (x *TranscriptChangeList) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptChangeList.ProtoReflect.Descriptor instead.
func (*TranscriptChangeList) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{34}
}

func (x *TranscriptChangeList) GetChanges() []*ShortTranscriptChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type TranscriptChange struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EpisodeId         string                 `protobuf:"bytes,2,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	Summary           string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Transcript        string                 `protobuf:"bytes,4,opt,name=transcript,proto3" json:"transcript,omitempty"`
	State             ContributionState      `protobuf:"varint,6,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	Author            *Author                `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	CreatedAt         string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Merged            bool                   `protobuf:"varint,9,opt,name=merged,proto3" json:"merged,omitempty"`
	PointsAwarded     float32                `protobuf:"fixed32,10,opt,name=points_awarded,json=pointsAwarded,proto3" json:"points_awarded,omitempty"`
	TranscriptVersion string                 `protobuf:"bytes,11,opt,name=transcript_version,json=transcriptVersion,proto3" json:"transcript_version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TranscriptChange) Reset() {
	*x = TranscriptChange{}
	mi := &file_transcript_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptChange) ProtoMessage() {}

func (x *TranscriptChange) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptChange.ProtoReflect.Descriptor instead.
func (*TranscriptChange) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{35}
}

func (x *TranscriptChange) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TranscriptChange) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

func (x *TranscriptChange) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *TranscriptChange) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *TranscriptChange) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *TranscriptChange) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *TranscriptChange) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TranscriptChange) GetMerged() bool {
	if x != nil {
		return x.Merged
	}
	return false
}

func (x *TranscriptChange) GetPointsAwarded() float32 {
	if x != nil {
		return x.PointsAwarded
	}
	return 0
}

func (x *TranscriptChange) GetTranscriptVersion() string {
	if x != nil {
		return x.TranscriptVersion
	}
	return ""
}

type ShortTranscriptChange struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EpisodeId         string                 `protobuf:"bytes,2,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	State             ContributionState      `protobuf:"varint,6,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	Author            *Author                `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	CreatedAt         string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Merged            bool                   `protobuf:"varint,9,opt,name=merged,proto3" json:"merged,omitempty"`
	PointsAwarded     float32                `protobuf:"fixed32,10,opt,name=points_awarded,json=pointsAwarded,proto3" json:"points_awarded,omitempty"`
	TranscriptVersion string                 `protobuf:"bytes,11,opt,name=transcript_version,json=transcriptVersion,proto3" json:"transcript_version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ShortTranscriptChange) Reset() {
	*x = ShortTranscriptChange{}
	mi := &file_transcript_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortTranscriptChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortTranscriptChange) ProtoMessage() {}

func (x *ShortTranscriptChange) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortTranscriptChange.ProtoReflect.Descriptor instead.
func (*ShortTranscriptChange) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{36}
}

func (x *ShortTranscriptChange) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShortTranscriptChange) GetEpisodeId() string {
	if x != nil {
		return x.EpisodeId
	}
	return ""
}

func (x *ShortTranscriptChange) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *ShortTranscriptChange) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ShortTranscriptChange) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ShortTranscriptChange) GetMerged() bool {
	if x != nil {
		return x.Merged
	}
	return false
}

func (x *ShortTranscriptChange) GetPointsAwarded() float32 {
	if x != nil {
		return x.PointsAwarded
	}
	return 0
}

func (x *ShortTranscriptChange) GetTranscriptVersion() string {
	if x != nil {
		return x.TranscriptVersion
	}
	return ""
}

type RequestTranscriptChangeStateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State           ContributionState      `protobuf:"varint,2,opt,name=state,proto3,enum=rsk.ContributionState" json:"state,omitempty"`
	PointsOnApprove float32                `protobuf:"fixed32,3,opt,name=points_on_approve,json=pointsOnApprove,proto3" json:"points_on_approve,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RequestTranscriptChangeStateRequest) Reset() {
	*x = RequestTranscriptChangeStateRequest{}
	mi := &file_transcript_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestTranscriptChangeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTranscriptChangeStateRequest) ProtoMessage() {}

func (x *RequestTranscriptChangeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTranscriptChangeStateRequest.ProtoReflect.Descriptor instead.
func (*RequestTranscriptChangeStateRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{37}
}

func (x *RequestTranscriptChangeStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestTranscriptChangeStateRequest) GetState() ContributionState {
	if x != nil {
		return x.State
	}
	return ContributionState_STATE_UNDEFINED
}

func (x *RequestTranscriptChangeStateRequest) GetPointsOnApprove() float32 {
	if x != nil {
		return x.PointsOnApprove
	}
	return 0
}

type GetTranscriptChangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranscriptChangeRequest) Reset() {
	*x = GetTranscriptChangeRequest{}
	mi := &file_transcript_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptChangeRequest) ProtoMessage() {}

func (x *GetTranscriptChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptChangeRequest.ProtoReflect.Descriptor instead.
func (*GetTranscriptChangeRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{38}
}

func (x *GetTranscriptChangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTranscriptChangeDiffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranscriptChangeDiffRequest) Reset() {
	*x = GetTranscriptChangeDiffRequest{}
	mi := &file_transcript_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptChangeDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptChangeDiffRequest) ProtoMessage() {}

func (x *GetTranscriptChangeDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptChangeDiffRequest.ProtoReflect.Descriptor instead.
func (*GetTranscriptChangeDiffRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{39}
}

func (x *GetTranscriptChangeDiffRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TranscriptChangeDiff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Diffs         []string               `protobuf:"bytes,2,rep,name=diffs,proto3" json:"diffs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptChangeDiff) Reset() {
	*x = TranscriptChangeDiff{}
	mi := &file_transcript_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptChangeDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptChangeDiff) ProtoMessage() {}

func (x *TranscriptChangeDiff) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptChangeDiff.ProtoReflect.Descriptor instead.
func (*TranscriptChangeDiff) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{40}
}

func (x *TranscriptChangeDiff) GetDiffs() []string {
	if x != nil {
		return x.Diffs
	}
	return nil
}

type TranscriptDialog struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TranscriptMeta    *ShortTranscript       `protobuf:"bytes,1,opt,name=transcript_meta,json=transcriptMeta,proto3" json:"transcript_meta,omitempty"`
	Dialog            []*Dialog              `protobuf:"bytes,2,rep,name=dialog,proto3" json:"dialog,omitempty"`
	MaxDialogPosition int32                  `protobuf:"varint,3,opt,name=max_dialog_position,json=maxDialogPosition,proto3" json:"max_dialog_position,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TranscriptDialog) Reset() {
	*x = TranscriptDialog{}
	mi := &file_transcript_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptDialog) ProtoMessage() {}

func (x *TranscriptDialog) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptDialog.ProtoReflect.Descriptor instead.
func (*TranscriptDialog) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{41}
}

func (x *TranscriptDialog) GetTranscriptMeta() *ShortTranscript {
	if x != nil {
		return x.TranscriptMeta
	}
	return nil
}

func (x *TranscriptDialog) GetDialog() []*Dialog {
	if x != nil {
		return x.Dialog
	}
	return nil
}

func (x *TranscriptDialog) GetMaxDialogPosition() int32 {
	if x != nil {
		return x.MaxDialogPosition
	}
	return 0
}

type SetTranscriptRatingScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epid          string                 `protobuf:"bytes,1,opt,name=epid,proto3" json:"epid,omitempty"`
	Score         float32                `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	Delete        bool                   `protobuf:"varint,3,opt,name=delete,proto3" json:"delete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTranscriptRatingScoreRequest) Reset() {
	*x = SetTranscriptRatingScoreRequest{}
	mi := &file_transcript_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTranscriptRatingScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTranscriptRatingScoreRequest) ProtoMessage() {}

func (x *SetTranscriptRatingScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTranscriptRatingScoreRequest.ProtoReflect.Descriptor instead.
func (*SetTranscriptRatingScoreRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{42}
}

func (x *SetTranscriptRatingScoreRequest) GetEpid() string {
	if x != nil {
		return x.Epid
	}
	return ""
}

func (x *SetTranscriptRatingScoreRequest) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SetTranscriptRatingScoreRequest) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

type BulkSetTranscriptRatingScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epid          string                 `protobuf:"bytes,1,opt,name=epid,proto3" json:"epid,omitempty"`
	Scores        map[string]float32     `protobuf:"bytes,2,rep,name=scores,proto3" json:"scores,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	OauthSource   string                 `protobuf:"bytes,3,opt,name=oauth_source,json=oauthSource,proto3" json:"oauth_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkSetTranscriptRatingScoreRequest) Reset() {
	*x = BulkSetTranscriptRatingScoreRequest{}
	mi := &file_transcript_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkSetTranscriptRatingScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSetTranscriptRatingScoreRequest) ProtoMessage() {}

func (x *BulkSetTranscriptRatingScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkSetTranscriptRatingScoreRequest.ProtoReflect.Descriptor instead.
func (*BulkSetTranscriptRatingScoreRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{43}
}

func (x *BulkSetTranscriptRatingScoreRequest) GetEpid() string {
	if x != nil {
		return x.Epid
	}
	return ""
}

func (x *BulkSetTranscriptRatingScoreRequest) GetScores() map[string]float32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *BulkSetTranscriptRatingScoreRequest) GetOauthSource() string {
	if x != nil {
		return x.OauthSource
	}
	return ""
}

type BulkSetTranscriptTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epid          string                 `protobuf:"bytes,1,opt,name=epid,proto3" json:"epid,omitempty"`
	Tags          []*Tag                 `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkSetTranscriptTagsRequest) Reset() {
	*x = BulkSetTranscriptTagsRequest{}
	mi := &file_transcript_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkSetTranscriptTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkSetTranscriptTagsRequest) ProtoMessage() {}

func (x *BulkSetTranscriptTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkSetTranscriptTagsRequest.ProtoReflect.Descriptor instead.
func (*BulkSetTranscriptTagsRequest) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{44}
}

func (x *BulkSetTranscriptTagsRequest) GetEpid() string {
	if x != nil {
		return x.Epid
	}
	return ""
}

func (x *BulkSetTranscriptTagsRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_transcript_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_transcript_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_transcript_proto_rawDescGZIP(), []int{45}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_transcript_proto protoreflect.FileDescriptor

const file_transcript_proto_rawDesc = "" +
	"\n" +
	"\x10transcript.proto\x12\x03rsk\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\fcommon.proto\"\xfa\a\n" +
	"\n" +
	"Transcript\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vpublication\x18\x02 \x01(\tR\vpublication\x12\x16\n" +
	"\x06series\x18\x03 \x01(\x05R\x06series\x12\x18\n" +
	"\aepisode\x18\x04 \x01(\x05R\aepisode\x129\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1d.rsk.Transcript.MetadataEntryR\bmetadata\x12+\n" +
	"\n" +
	"transcript\x18\a \x03(\v2\v.rsk.DialogR\n" +
	"transcript\x12!\n" +
	"\frelease_date\x18\b \x01(\tR\vreleaseDate\x12)\n" +
	"\bsynopses\x18\t \x03(\v2\r.rsk.SynopsisR\bsynopses\x12\"\n" +
	"\fcontributors\x18\n" +
	" \x03(\tR\fcontributors\x12\x1e\n" +
	"\n" +
	"incomplete\x18\v \x01(\bR\n" +
	"incomplete\x12%\n" +
	"\x0eraw_transcript\x18\f \x01(\tR\rrawTranscript\x12\x19\n" +
	"\bshort_id\x18\x0e \x01(\tR\ashortId\x12#\n" +
	"\x06trivia\x18\x0f \x03(\v2\v.rsk.TriviaR\x06trivia\x12\x16\n" +
	"\x06actors\x18\x10 \x03(\tR\x06actors\x120\n" +
	"\x14offset_accuracy_pcnt\x18\x11 \x01(\x05R\x12offsetAccuracyPcnt\x12\x12\n" +
	"\x04name\x18\x12 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x13 \x01(\tR\aversion\x12\x16\n" +
	"\x06bestof\x18\x14 \x01(\bR\x06bestof\x12\x18\n" +
	"\aspecial\x18\x15 \x01(\bR\aspecial\x12\x16\n" +
	"\x06locked\x18\x16 \x01(\bR\x06locked\x12\x18\n" +
	"\asummary\x18\x17 \x01(\tR\asummary\x126\n" +
	"\raudio_quality\x18\x18 \x01(\x0e2\x11.rsk.AudioQualityR\faudioQuality\x12 \n" +
	"\x05media\x18\x1a \x01(\v2\n" +
	".rsk.MediaR\x05media\x12?\n" +
	"\x10publication_type\x18\x1b \x01(\x0e2\x14.rsk.PublicationTypeR\x0fpublicationType\x12&\n" +
	"\aratings\x18\x1c \x01(\v2\f.rsk.RatingsR\aratings\x12\x1c\n" +
	"\x04tags\x18\x1d \x03(\v2\b.rsk.TagR\x04tags\x12-\n" +
	"\x12completion_reports\x18\x1e \x03(\tR\x11completionReports\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"^\n" +
	"\x05Media\x12\x14\n" +
	"\x05video\x18\x01 \x01(\bR\x05video\x12\x14\n" +
	"\x05audio\x18\x02 \x01(\bR\x05audio\x12)\n" +
	"\x10audio_restricted\x18\x03 \x01(\bR\x0faudioRestricted\"\x87\a\n" +
	"\x0fShortTranscript\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vpublication\x18\x02 \x01(\tR\vpublication\x12\x16\n" +
	"\x06series\x18\x03 \x01(\x05R\x06series\x12\x18\n" +
	"\aepisode\x18\x04 \x01(\x05R\aepisode\x121\n" +
	"\x14transcript_available\x18\x05 \x01(\bR\x13transcriptAvailable\x12\x1e\n" +
	"\n" +
	"incomplete\x18\x06 \x01(\bR\n" +
	"incomplete\x12!\n" +
	"\frelease_date\x18\a \x01(\tR\vreleaseDate\x12\x18\n" +
	"\asummary\x18\b \x01(\tR\asummary\x12)\n" +
	"\bsynopsis\x18\t \x03(\v2\r.rsk.SynopsisR\bsynopsis\x12)\n" +
	"\x10trivia_available\x18\n" +
	" \x01(\bR\x0ftriviaAvailable\x12\x16\n" +
	"\x06actors\x18\v \x03(\tR\x06actors\x12\x19\n" +
	"\bshort_id\x18\r \x01(\tR\ashortId\x120\n" +
	"\x14offset_accuracy_pcnt\x18\x0e \x01(\x05R\x12offsetAccuracyPcnt\x12\x12\n" +
	"\x04name\x18\x0f \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x10 \x01(\tR\aversion\x12>\n" +
	"\bmetadata\x18\x11 \x03(\v2\".rsk.ShortTranscript.MetadataEntryR\bmetadata\x12\x16\n" +
	"\x06bestof\x18\x12 \x01(\bR\x06bestof\x12\x18\n" +
	"\aspecial\x18\x13 \x01(\bR\aspecial\x126\n" +
	"\raudio_quality\x18\x14 \x01(\x0e2\x11.rsk.AudioQualityR\faudioQuality\x12 \n" +
	"\x05media\x18\x16 \x01(\v2\n" +
	".rsk.MediaR\x05media\x12?\n" +
	"\x10publication_type\x18\x17 \x01(\x0e2\x14.rsk.PublicationTypeR\x0fpublicationType\x12!\n" +
	"\frating_score\x18\x18 \x01(\x02R\vratingScore\x12*\n" +
	"\x11num_rating_scores\x18\x19 \x01(\x05R\x0fnumRatingScores\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcd\x04\n" +
	"\x06Dialog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03pos\x18\x02 \x01(\x05R\x03pos\x12*\n" +
	"\x04type\x18\x03 \x01(\x0e2\x16.rsk.Dialog.DialogTypeR\x04type\x12\x14\n" +
	"\x05actor\x18\x04 \x01(\tR\x05actor\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x125\n" +
	"\bmetadata\x18\x06 \x03(\v2\x19.rsk.Dialog.MetadataEntryR\bmetadata\x12$\n" +
	"\x0eis_matched_row\x18\b \x01(\bR\fisMatchedRow\x12\x18\n" +
	"\anotable\x18\t \x01(\bR\anotable\x12\x1d\n" +
	"\n" +
	"offset_sec\x18\n" +
	" \x01(\x03R\toffsetSec\x12'\n" +
	"\x0foffset_inferred\x18\v \x01(\bR\x0eoffsetInferred\x12'\n" +
	"\x0foffset_distance\x18\f \x01(\x05R\x0eoffsetDistance\x12\x1b\n" +
	"\toffset_ms\x18\r \x01(\x05R\boffsetMs\x12\x1f\n" +
	"\vduration_ms\x18\x0e \x01(\x05R\n" +
	"durationMs\x12 \n" +
	"\vplaceholder\x18\x0f \x01(\bR\vplaceholder\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\n" +
	"DialogType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04SONG\x10\x01\x12\b\n" +
	"\x04CHAT\x10\x02\x12\b\n" +
	"\x04NONE\x10\x03\x12\a\n" +
	"\x03GAP\x10\x04\"b\n" +
	"\bSynopsis\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1b\n" +
	"\tstart_pos\x18\x02 \x01(\x05R\bstartPos\x12\x17\n" +
	"\aend_pos\x18\x03 \x01(\x05R\x06endPos\"`\n" +
	"\x06Trivia\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1b\n" +
	"\tstart_pos\x18\x02 \x01(\x05R\bstartPos\x12\x17\n" +
	"\aend_pos\x18\x03 \x01(\x05R\x06endPos\"E\n" +
	"\x14GetTranscriptRequest\x12\x12\n" +
	"\x04epid\x18\x01 \x01(\tR\x04epid\x12\x19\n" +
	"\bwith_raw\x18\x02 \x01(\bR\awithRaw\"5\n" +
	"\vDialogRange\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x05R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x05R\x03end\"\x9e\x01\n" +
	"\x1aGetTranscriptDialogRequest\x12\x12\n" +
	"\x04epid\x18\x01 \x01(\tR\x04epid\x12\x14\n" +
	"\x03pos\x18\x02 \x01(\x05B\x02\x18\x01R\x03pos\x12.\n" +
	"\x11num_context_lines\x18\x03 \x01(\x05B\x02\x18\x01R\x0fnumContextLines\x12&\n" +
	"\x05range\x18\x04 \x01(\v2\x10.rsk.DialogRangeR\x05range\"\x18\n" +
	"\x16ListTranscriptsRequest\"B\n" +
	"\x0eTranscriptList\x120\n" +
	"\bepisodes\x18\x01 \x03(\v2\x14.rsk.ShortTranscriptR\bepisodes\"\xb2\x01\n" +
	"\aRatings\x120\n" +
	"\x06scores\x18\x01 \x03(\v2\x18.rsk.Ratings.ScoresEntryR\x06scores\x12\x1b\n" +
	"\tscore_avg\x18\x02 \x01(\x02R\bscoreAvg\x12\x1d\n" +
	"\n" +
	"num_scores\x18\x03 \x01(\x05R\tnumScores\x1a9\n" +
	"\vScoresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"=\n" +
	"\vChunkStates\x12.\n" +
	"\x06states\x18\x01 \x03(\x0e2\x16.rsk.ContributionStateR\x06states\"\xa0\x05\n" +
	"\x16ChunkedTranscriptStats\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vpublication\x18\x02 \x01(\tR\vpublication\x12\x16\n" +
	"\x06series\x18\x03 \x01(\x05R\x06series\x12\x18\n" +
	"\aepisode\x18\x04 \x01(\x05R\aepisode\x12d\n" +
	"\x13chunk_contributions\x18\x05 \x03(\v23.rsk.ChunkedTranscriptStats.ChunkContributionsEntryR\x12chunkContributions\x12\x1d\n" +
	"\n" +
	"num_chunks\x18\x06 \x01(\x05R\tnumChunks\x12+\n" +
	"\x11num_contributions\x18\a \x01(\x05R\x10numContributions\x12:\n" +
	"\x19num_pending_contributions\x18\b \x01(\x05R\x17numPendingContributions\x12K\n" +
	"\"num_request_approval_contributions\x18\t \x01(\x05R\x1fnumRequestApprovalContributions\x12<\n" +
	"\x1anum_approved_contributions\x18\n" +
	" \x01(\x05R\x18numApprovedContributions\x12<\n" +
	"\x1anum_rejected_contributions\x18\v \x01(\x05R\x18numRejectedContributions\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\x1aW\n" +
	"\x17ChunkContributionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.rsk.ChunkStatesR\x05value:\x028\x01\"N\n" +
	"\x15ChunkedTranscriptList\x125\n" +
	"\achunked\x18\x01 \x03(\v2\x1b.rsk.ChunkedTranscriptStatsR\achunked\"\x89\x01\n" +
	"\n" +
	"ChunkStats\x12\x1f\n" +
	"\vnum_pending\x18\x01 \x01(\x05R\n" +
	"numPending\x12#\n" +
	"\rnum_submitted\x18\x02 \x01(\x05R\fnumSubmitted\x125\n" +
	"\x17suggested_next_chunk_id\x18\x03 \x01(\tR\x14suggestedNextChunkId\"+\n" +
	"\x19GetTranscriptChunkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x97\x02\n" +
	"\x05Chunk\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x15chunked_transcript_id\x18\x02 \x01(\tR\x13chunkedTranscriptId\x12\x10\n" +
	"\x03raw\x18\x03 \x01(\tR\x03raw\x12(\n" +
	"\x0eaudio_clip_uri\x18\x04 \x01(\tB\x02\x18\x01R\faudioClipUri\x12+\n" +
	"\x11num_contributions\x18\x05 \x01(\x05R\x10numContributions\x12\x1d\n" +
	"\n" +
	"episode_id\x18\x06 \x01(\tR\tepisodeId\x12\"\n" +
	"\rstart_time_ms\x18\a \x01(\x05R\vstartTimeMs\x12\x1e\n" +
	"\vend_time_ms\x18\b \x01(\x05R\tendTimeMs\"\xe0\x01\n" +
	"\x1bListTranscriptChunksRequest\x122\n" +
	"\x15chunked_transcript_id\x18\x01 \x01(\tR\x13chunkedTranscriptId\x12\x16\n" +
	"\x06filter\x18\x02 \x01(\tR\x06filter\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x03 \x01(\tR\tsortField\x12%\n" +
	"\x0esort_direction\x18\x04 \x01(\tR\rsortDirection\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"9\n" +
	"\x13TranscriptChunkList\x12\"\n" +
	"\x06chunks\x18\x01 \x03(\v2\n" +
	".rsk.ChunkR\x06chunks\"\xae\x01\n" +
	"\x1dListChunkContributionsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x02 \x01(\tR\tsortField\x12%\n" +
	"\x0esort_direction\x18\x03 \x01(\tR\rsortDirection\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"U\n" +
	"\x15ChunkContributionList\x12<\n" +
	"\rcontributions\x18\x01 \x03(\v2\x16.rsk.ChunkContributionR\rcontributions\"\xfb\x01\n" +
	"\x11ChunkContribution\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\tR\achunkId\x12\x1e\n" +
	"\n" +
	"transcript\x18\x03 \x01(\tR\n" +
	"transcript\x12,\n" +
	"\x05state\x18\x05 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\x12#\n" +
	"\x06author\x18\x06 \x01(\v2\v.rsk.AuthorR\x06author\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12#\n" +
	"\rstate_comment\x18\b \x01(\tR\fstateCommentJ\x04\b\x04\x10\x05\"\xb3\x01\n" +
	"\x16ShortChunkContribution\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\tR\achunkId\x12\x1b\n" +
	"\tauthor_id\x18\x04 \x01(\tR\bauthorId\x12,\n" +
	"\x05state\x18\x05 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\x12#\n" +
	"\rstate_comment\x18\x06 \x01(\tR\fstateComment\"_\n" +
	"\x1aChunkChunkContributionList\x12A\n" +
	"\rcontributions\x18\x01 \x03(\v2\x1b.rsk.ShortChunkContributionR\rcontributions\"F\n" +
	"\x1bGetChunkContributionRequest\x12'\n" +
	"\x0fcontribution_id\x18\x01 \x01(\tR\x0econtributionId\"[\n" +
	"\x1eCreateChunkContributionRequest\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x1e\n" +
	"\n" +
	"transcript\x18\x02 \x01(\tR\n" +
	"transcript\"\x97\x01\n" +
	"\x1eUpdateChunkContributionRequest\x12'\n" +
	"\x0fcontribution_id\x18\x01 \x01(\tR\x0econtributionId\x12\x1e\n" +
	"\n" +
	"transcript\x18\x02 \x01(\tR\n" +
	"transcript\x12,\n" +
	"\x05state\x18\x03 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\"I\n" +
	"\x1eDeleteChunkContributionRequest\x12'\n" +
	"\x0fcontribution_id\x18\x01 \x01(\tR\x0econtributionId\"\xa6\x01\n" +
	"$RequestChunkContributionStateRequest\x12'\n" +
	"\x0fcontribution_id\x18\x01 \x01(\tR\x0econtributionId\x12;\n" +
	"\rrequest_state\x18\x02 \x01(\x0e2\x16.rsk.ContributionStateR\frequestState\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\"\x9c\x01\n" +
	"\x1dCreateTranscriptChangeRequest\x12\x12\n" +
	"\x04epid\x18\x01 \x01(\tR\x04epid\x12\x1e\n" +
	"\n" +
	"transcript\x18\x02 \x01(\tR\n" +
	"transcript\x12-\n" +
	"\x12transcript_version\x18\x03 \x01(\tR\x11transcriptVersion\x12\x18\n" +
	"\asummary\x18\x04 \x01(\tR\asummary\"\xad\x01\n" +
	"\x1cListTranscriptChangesRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x02 \x01(\tR\tsortField\x12%\n" +
	"\x0esort_direction\x18\x03 \x01(\tR\rsortDirection\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\xc3\x01\n" +
	"\x1dUpdateTranscriptChangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1e\n" +
	"\n" +
	"transcript\x18\x02 \x01(\tR\n" +
	"transcript\x12,\n" +
	"\x05state\x18\x03 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\x12*\n" +
	"\x11points_on_approve\x18\x04 \x01(\x02R\x0fpointsOnApprove\x12\x18\n" +
	"\asummary\x18\x05 \x01(\tR\asummary\"/\n" +
	"\x1dDeleteTranscriptChangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\x14TranscriptChangeList\x124\n" +
	"\achanges\x18\x01 \x03(\v2\x1a.rsk.ShortTranscriptChangeR\achanges\"\xe1\x02\n" +
	"\x10TranscriptChange\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"episode_id\x18\x02 \x01(\tR\tepisodeId\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12\x1e\n" +
	"\n" +
	"transcript\x18\x04 \x01(\tR\n" +
	"transcript\x12,\n" +
	"\x05state\x18\x06 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\x12#\n" +
	"\x06author\x18\a \x01(\v2\v.rsk.AuthorR\x06author\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x16\n" +
	"\x06merged\x18\t \x01(\bR\x06merged\x12%\n" +
	"\x0epoints_awarded\x18\n" +
	" \x01(\x02R\rpointsAwarded\x12-\n" +
	"\x12transcript_version\x18\v \x01(\tR\x11transcriptVersionJ\x04\b\x05\x10\x06\"\xa6\x02\n" +
	"\x15ShortTranscriptChange\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"episode_id\x18\x02 \x01(\tR\tepisodeId\x12,\n" +
	"\x05state\x18\x06 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\x12#\n" +
	"\x06author\x18\a \x01(\v2\v.rsk.AuthorR\x06author\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x16\n" +
	"\x06merged\x18\t \x01(\bR\x06merged\x12%\n" +
	"\x0epoints_awarded\x18\n" +
	" \x01(\x02R\rpointsAwarded\x12-\n" +
	"\x12transcript_version\x18\v \x01(\tR\x11transcriptVersion\"\x8f\x01\n" +
	"#RequestTranscriptChangeStateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12,\n" +
	"\x05state\x18\x02 \x01(\x0e2\x16.rsk.ContributionStateR\x05state\x12*\n" +
	"\x11points_on_approve\x18\x03 \x01(\x02R\x0fpointsOnApprove\",\n" +
	"\x1aGetTranscriptChangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"0\n" +
	"\x1eGetTranscriptChangeDiffRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\",\n" +
	"\x14TranscriptChangeDiff\x12\x14\n" +
	"\x05diffs\x18\x02 \x03(\tR\x05diffs\"\xa6\x01\n" +
	"\x10TranscriptDialog\x12=\n" +
	"\x0ftranscript_meta\x18\x01 \x01(\v2\x14.rsk.ShortTranscriptR\x0etranscriptMeta\x12#\n" +
	"\x06dialog\x18\x02 \x03(\v2\v.rsk.DialogR\x06dialog\x12.\n" +
	"\x13max_dialog_position\x18\x03 \x01(\x05R\x11maxDialogPosition\"c\n" +
	"\x1fSetTranscriptRatingScoreRequest\x12\x12\n" +
	"\x04epid\x18\x01 \x01(\tR\x04epid\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x02R\x05score\x12\x16\n" +
	"\x06delete\x18\x03 \x01(\bR\x06delete\"\xe5\x01\n" +
	"#BulkSetTranscriptRatingScoreRequest\x12\x12\n" +
	"\x04epid\x18\x01 \x01(\tR\x04epid\x12L\n" +
	"\x06scores\x18\x02 \x03(\v24.rsk.BulkSetTranscriptRatingScoreRequest.ScoresEntryR\x06scores\x12!\n" +
	"\foauth_source\x18\x03 \x01(\tR\voauthSource\x1a9\n" +
	"\vScoresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"P\n" +
	"\x1cBulkSetTranscriptTagsRequest\x12\x12\n" +
	"\x04epid\x18\x01 \x01(\tR\x04epid\x12\x1c\n" +
	"\x04tags\x18\x02 \x03(\v2\b.rsk.TagR\x04tags\"7\n" +
	"\x03Tag\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp*\x7f\n" +
	"\x11ContributionState\x12\x13\n" +
	"\x0fSTATE_UNDEFINED\x10\x00\x12\x1a\n" +
	"\x16STATE_REQUEST_APPROVAL\x10\x01\x12\x11\n" +
	"\rSTATE_PENDING\x10\x02\x12\x12\n" +
	"\x0eSTATE_APPROVED\x10\x03\x12\x12\n" +
	"\x0eSTATE_REJECTED\x10\x04*J\n" +
	"\fAudioQuality\x12\x19\n" +
	"\x15AUDIO_QUALITY_UNKNOWN\x10\x00\x12\b\n" +
	"\x04POOR\x10\x01\x12\v\n" +
	"\aAVERAGE\x10\x02\x12\b\n" +
	"\x04GOOD\x10\x03*\xba\x01\n" +
	"\x0fPublicationType\x12\x1c\n" +
	"\x18PUBLICATION_TYPE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16PUBLICATION_TYPE_RADIO\x10\x01\x12\x1c\n" +
	"\x18PUBLICATION_TYPE_PODCAST\x10\x02\x12\x1a\n" +
	"\x16PUBLICATION_TYPE_PROMO\x10\x03\x12\x17\n" +
	"\x13PUBLICATION_TYPE_TV\x10\x04\x12\x1a\n" +
	"\x16PUBLICATION_TYPE_OTHER\x10\x052\xed%\n" +
	"\x11TranscriptService\x12\xa2\x01\n" +
	"\rGetTranscript\x12\x19.rsk.GetTranscriptRequest\x1a\x0f.rsk.Transcript\"e\x92AD\n" +
	"\x06search\x12+Fetch a transcript and associated metadata.*\rgetTranscript\x82\xd3\xe4\x93\x02\x18\x12\x16/api/transcript/{epid}\x12\xc6\x01\n" +
	"\x13GetTranscriptDialog\x12\x1f.rsk.GetTranscriptDialogRequest\x1a\x15.rsk.TranscriptDialog\"w\x92AI\n" +
	"\x06search\x12*Fetch a single line of dialog by position.*\x13getTranscriptDialog\x82\xd3\xe4\x93\x02%\x12#/api/transcript/{epid}/dialog/{pos}\x12\x9a\x01\n" +
	"\x0fListTranscripts\x12\x1b.rsk.ListTranscriptsRequest\x1a\x13.rsk.TranscriptList\"U\x92A;\n" +
	"\x06search\x12 Fetch list of available episodes*\x0flistTranscripts\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/transcript\x12\xd5\x01\n" +
	"\x16ListChunkedTranscripts\x12\x16.google.protobuf.Empty\x1a\x1a.rsk.ChunkedTranscriptList\"\x86\x01\x92Ad\n" +
	"\x06search\x12BList incomplete transcriptions that are being completed in chunks.*\x16listChunkedTranscripts\x82\xd3\xe4\x93\x02\x19\x12\x17/api/transcript/chunked\x12\xd0\x01\n" +
	"\x1eGetChunkedTranscriptChunkStats\x12\x16.google.protobuf.Empty\x1a\x0f.rsk.ChunkStats\"\x84\x01\x92AU\n" +
	"\x06search\x12+Get details about the current chunk backlog*\x1egetChunkedTranscriptChunkStats\x82\xd3\xe4\x93\x02&\x12$/api/transcripts/chunked/chunk-stats\x12\xeb\x01\n" +
	"\x14ListTranscriptChunks\x12 .rsk.ListTranscriptChunksRequest\x1a\x18.rsk.TranscriptChunkList\"\x96\x01\x92AU\n" +
	"\x06search\x125Lists all chunks for the given chunked transcript ID.*\x14listTranscriptChunks\x82\xd3\xe4\x93\x028\x126/api/transcript/chunked/{chunked_transcript_id}/chunks\x12\xbe\x01\n" +
	"\x12GetTranscriptChunk\x12\x1e.rsk.GetTranscriptChunkRequest\x1a\n" +
	".rsk.Chunk\"|\x92AO\n" +
	"\x06search\x121Gets a specific transcript chunk to be completed.*\x12getTranscriptChunk\x82\xd3\xe4\x93\x02$\x12\"/api/transcript/chunked/chunk/{id}\x12\xd5\x01\n" +
	"\x16ListChunkContributions\x12\".rsk.ListChunkContributionsRequest\x1a\x1a.rsk.ChunkContributionList\"{\x92AE\n" +
	"\x06search\x12#lists contributed transcript chunks*\x16listChunkContributions\x82\xd3\xe4\x93\x02-\x12+/api/transcript/chunked/chunk/contributions\x12\xe9\x01\n" +
	"\x17CreateChunkContribution\x12#.rsk.CreateChunkContributionRequest\x1a\x16.rsk.ChunkContribution\"\x90\x01\x92AM\n" +
	"\x06search\x12*Submit a completed (or in-progress) chunk.*\x17createChunkContribution\x82\xd3\xe4\x93\x02::\x01*\"5/api/transcript/chunked/chunk/{chunk_id}/contribution\x12\xe6\x01\n" +
	"\x14GetChunkContribution\x12 .rsk.GetChunkContributionRequest\x1a\x16.rsk.ChunkContribution\"\x93\x01\x92AL\n" +
	"\x06search\x12,lists any existing contributions for a chunk*\x14getChunkContribution\x82\xd3\xe4\x93\x02>\x12</api/transcript/chunked/chunk/contribution/{contribution_id}\x12\xf0\x01\n" +
	"\x17UpdateChunkContribution\x12#.rsk.UpdateChunkContributionRequest\x1a\x16.rsk.ChunkContribution\"\x97\x01\x92AM\n" +
	"\x06search\x12*Update one of your existing contributions.*\x17updateChunkContribution\x82\xd3\xe4\x93\x02A:\x01*2</api/transcript/chunked/chunk/contribution/{contribution_id}\x12\xd7\x01\n" +
	"\x17DeleteChunkContribution\x12#.rsk.DeleteChunkContributionRequest\x1a\x16.google.protobuf.Empty\"\x7f\x92A8\n" +
	"\x06search\x12\x15Discard contribution.*\x17deleteChunkContribution\x82\xd3\xe4\x93\x02>*</api/transcript/chunked/chunk/contribution/{contribution_id}\x12\x88\x02\n" +
	"\x1dRequestChunkContributionState\x12).rsk.RequestChunkContributionStateRequest\x1a\x16.rsk.ChunkContribution\"\xa3\x01\x92AS\n" +
	"\x06search\x12*request the contribution state be changed.*\x1drequestChunkContributionState\x82\xd3\xe4\x93\x02G:\x01*2B/api/transcript/chunked/chunk/contribution/{contribution_id}/state\x12\xbf\x01\n" +
	"\x15ListTranscriptChanges\x12!.rsk.ListTranscriptChangesRequest\x1a\x19.rsk.TranscriptChangeList\"h\x92AG\n" +
	"\x06search\x12&Submits a new version of a transcript.*\x15listTranscriptChanges\x82\xd3\xe4\x93\x02\x18\x12\x16/api/transcript/change\x12\xb1\x01\n" +
	"\x13GetTranscriptChange\x12\x1f.rsk.GetTranscriptChangeRequest\x1a\x15.rsk.TranscriptChange\"b\x92A<\n" +
	"\x06search\x12\x1dGet a single existing change.*\x13getTranscriptChange\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/transcript/change/{id}\x12\xc3\x01\n" +
	"\x17GetTranscriptChangeDiff\x12#.rsk.GetTranscriptChangeDiffRequest\x1a\x19.rsk.TranscriptChangeDiff\"h\x92A=\n" +
	"\x06search\x12\x1aGet the diff for a change.*\x17getTranscriptChangeDiff\x82\xd3\xe4\x93\x02\"\x12 /api/transcript/change/{id}/diff\x12\xc8\x01\n" +
	"\x16CreateTranscriptChange\x12\".rsk.CreateTranscriptChangeRequest\x1a\x15.rsk.TranscriptChange\"s\x92AH\n" +
	"\x06search\x12&Submits a new version of a transcript.*\x16createTranscriptChange\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/api/transcript/{epid}/change\x12\xbb\x01\n" +
	"\x16UpdateTranscriptChange\x12\".rsk.UpdateTranscriptChangeRequest\x1a\x15.rsk.TranscriptChange\"f\x92A=\n" +
	"\x06search\x12\x1bUpdates an existing change.*\x16updateTranscriptChange\x82\xd3\xe4\x93\x02 :\x01*2\x1b/api/transcript/change/{id}\x12\xaf\x01\n" +
	"\x16DeleteTranscriptChange\x12\".rsk.DeleteTranscriptChangeRequest\x1a\x16.google.protobuf.Empty\"Y\x92A3\n" +
	"\x06search\x12\x11Deletes a change.*\x16deleteTranscriptChange\x82\xd3\xe4\x93\x02\x1d*\x1b/api/transcript/change/{id}\x12\xdf\x01\n" +
	"\x1cRequestTranscriptChangeState\x12(.rsk.RequestTranscriptChangeStateRequest\x1a\x16.google.protobuf.Empty\"}\x92AN\n" +
	"\x06search\x12&request the change's state be changed.*\x1crequestTranscriptChangeState\x82\xd3\xe4\x93\x02&:\x01*2!/api/transcript/change/{id}/state\x12\xd7\x01\n" +
	"\x18SetTranscriptRatingScore\x12$.rsk.SetTranscriptRatingScoreRequest\x1a\x16.google.protobuf.Empty\"}\x92AL\n" +
	"\x06search\x12(Submits a rating score for a transcript.*\x18setTranscriptRatingScore\x82\xd3\xe4\x93\x02(:\x01*\x1a#/api/transcript/{epid}/rating/score\x12\xf1\x01\n" +
	"\x1cBulkSetTranscriptRatingScore\x12(.rsk.BulkSetTranscriptRatingScoreRequest\x1a\x16.google.protobuf.Empty\"\x8e\x01\x92AX\n" +
	"\x06search\x120Submits a set of rating scores for a transcript.*\x1cbulkSetTranscriptRatingScore\x82\xd3\xe4\x93\x02-:\x01*\x1a(/api/transcript/{epid}/rating/score/bulk\x12\xc6\x01\n" +
	"\x15BulkSetTranscriptTags\x12!.rsk.BulkSetTranscriptTagsRequest\x1a\x16.google.protobuf.Empty\"r\x92AE\n" +
	"\x06search\x12%Submits multiple tags for an episode.*\x14bulkSetTranscriptTag\x82\xd3\xe4\x93\x02$:\x01*\x1a\x1f/api/transcript/{epid}/tag/bulkB\xa2\x01\x92Aq\x12\x052\x031.0*\x01\x01re\n" +
	"LTranscript service has endpoints related to viewing and editing transcripts.\x12\x15https://scrimpton.comZ,github.com/warmans/rsk-search/server/gen/apib\x06proto3"

var (
	file_transcript_proto_rawDescOnce sync.Once
	file_transcript_proto_rawDescData []byte
)

func file_transcript_proto_rawDescGZIP() []byte {
	file_transcript_proto_rawDescOnce.Do(func() {
		file_transcript_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transcript_proto_rawDesc), len(file_transcript_proto_rawDesc)))
	})
	return file_transcript_proto_rawDescData
}

var file_transcript_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_transcript_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_transcript_proto_goTypes = []any{
	(ContributionState)(0),                       // 0: rsk.ContributionState
	(AudioQuality)(0),                            // 1: rsk.AudioQuality
	(PublicationType)(0),                         // 2: rsk.PublicationType
	(Dialog_DialogType)(0),                       // 3: rsk.Dialog.DialogType
	(*Transcript)(nil),                           // 4: rsk.Transcript
	(*Media)(nil),                                // 5: rsk.Media
	(*ShortTranscript)(nil),                      // 6: rsk.ShortTranscript
	(*Dialog)(nil),                               // 7: rsk.Dialog
	(*Synopsis)(nil),                             // 8: rsk.Synopsis
	(*Trivia)(nil),                               // 9: rsk.Trivia
	(*GetTranscriptRequest)(nil),                 // 10: rsk.GetTranscriptRequest
	(*DialogRange)(nil),                          // 11: rsk.DialogRange
	(*GetTranscriptDialogRequest)(nil),           // 12: rsk.GetTranscriptDialogRequest
	(*ListTranscriptsRequest)(nil),               // 13: rsk.ListTranscriptsRequest
	(*TranscriptList)(nil),                       // 14: rsk.TranscriptList
	(*Ratings)(nil),                              // 15: rsk.Ratings
	(*ChunkStates)(nil),                          // 16: rsk.ChunkStates
	(*ChunkedTranscriptStats)(nil),               // 17: rsk.ChunkedTranscriptStats
	(*ChunkedTranscriptList)(nil),                // 18: rsk.ChunkedTranscriptList
	(*ChunkStats)(nil),                           // 19: rsk.ChunkStats
	(*GetTranscriptChunkRequest)(nil),            // 20: rsk.GetTranscriptChunkRequest
	(*Chunk)(nil),                                // 21: rsk.Chunk
	(*ListTranscriptChunksRequest)(nil),          // 22: rsk.ListTranscriptChunksRequest
	(*TranscriptChunkList)(nil),                  // 23: rsk.TranscriptChunkList
	(*ListChunkContributionsRequest)(nil),        // 24: rsk.ListChunkContributionsRequest
	(*ChunkContributionList)(nil),                // 25: rsk.ChunkContributionList
	(*ChunkContribution)(nil),                    // 26: rsk.ChunkContribution
	(*ShortChunkContribution)(nil),               // 27: rsk.ShortChunkContribution
	(*ChunkChunkContributionList)(nil),           // 28: rsk.ChunkChunkContributionList
	(*GetChunkContributionRequest)(nil),          // 29: rsk.GetChunkContributionRequest
	(*CreateChunkContributionRequest)(nil),       // 30: rsk.CreateChunkContributionRequest
	(*UpdateChunkContributionRequest)(nil),       // 31: rsk.UpdateChunkContributionRequest
	(*DeleteChunkContributionRequest)(nil),       // 32: rsk.DeleteChunkContributionRequest
	(*RequestChunkContributionStateRequest)(nil), // 33: rsk.RequestChunkContributionStateRequest
	(*CreateTranscriptChangeRequest)(nil),        // 34: rsk.CreateTranscriptChangeRequest
	(*ListTranscriptChangesRequest)(nil),         // 35: rsk.ListTranscriptChangesRequest
	(*UpdateTranscriptChangeRequest)(nil),        // 36: rsk.UpdateTranscriptChangeRequest
	(*DeleteTranscriptChangeRequest)(nil),        // 37: rsk.DeleteTranscriptChangeRequest
	(*TranscriptChangeList)(nil),                 // 38: rsk.TranscriptChangeList
	(*TranscriptChange)(nil),                     // 39: rsk.TranscriptChange
	(*ShortTranscriptChange)(nil),                // 40: rsk.ShortTranscriptChange
	(*RequestTranscriptChangeStateRequest)(nil),  // 41: rsk.RequestTranscriptChangeStateRequest
	(*GetTranscriptChangeRequest)(nil),           // 42: rsk.GetTranscriptChangeRequest
	(*GetTranscriptChangeDiffRequest)(nil),       // 43: rsk.GetTranscriptChangeDiffRequest
	(*TranscriptChangeDiff)(nil),                 // 44: rsk.TranscriptChangeDiff
	(*TranscriptDialog)(nil),                     // 45: rsk.TranscriptDialog
	(*SetTranscriptRatingScoreRequest)(nil),      // 46: rsk.SetTranscriptRatingScoreRequest
	(*BulkSetTranscriptRatingScoreRequest)(nil),  // 47: rsk.BulkSetTranscriptRatingScoreRequest
	(*BulkSetTranscriptTagsRequest)(nil),         // 48: rsk.BulkSetTranscriptTagsRequest
	(*Tag)(nil),                                  // 49: rsk.Tag
	nil,                                          // 50: rsk.Transcript.MetadataEntry
	nil,                                          // 51: rsk.ShortTranscript.MetadataEntry
	nil,                                          // 52: rsk.Dialog.MetadataEntry
	nil,                                          // 53: rsk.Ratings.ScoresEntry
	nil,                                          // 54: rsk.ChunkedTranscriptStats.ChunkContributionsEntry
	nil,                                          // 55: rsk.BulkSetTranscriptRatingScoreRequest.ScoresEntry
	(*Author)(nil),                               // 56: rsk.Author
	(*emptypb.Empty)(nil),                        // 57: google.protobuf.Empty
}
var file_transcript_proto_depIdxs = []int32{
	50, // 0: rsk.Transcript.metadata:type_name -> rsk.Transcript.MetadataEntry
	7,  // 1: rsk.Transcript.transcript:type_name -> rsk.Dialog
	8,  // 2: rsk.Transcript.synopses:type_name -> rsk.Synopsis
	9,  // 3: rsk.Transcript.trivia:type_name -> rsk.Trivia
	1,  // 4: rsk.Transcript.audio_quality:type_name -> rsk.AudioQuality
	5,  // 5: rsk.Transcript.media:type_name -> rsk.Media
	2,  // 6: rsk.Transcript.publication_type:type_name -> rsk.PublicationType
	15, // 7: rsk.Transcript.ratings:type_name -> rsk.Ratings
	49, // 8: rsk.Transcript.tags:type_name -> rsk.Tag
	8,  // 9: rsk.ShortTranscript.synopsis:type_name -> rsk.Synopsis
	51, // 10: rsk.ShortTranscript.metadata:type_name -> rsk.ShortTranscript.MetadataEntry
	1,  // 11: rsk.ShortTranscript.audio_quality:type_name -> rsk.AudioQuality
	5,  // 12: rsk.ShortTranscript.media:type_name -> rsk.Media
	2,  // 13: rsk.ShortTranscript.publication_type:type_name -> rsk.PublicationType
	3,  // 14: rsk.Dialog.type:type_name -> rsk.Dialog.DialogType
	52, // 15: rsk.Dialog.metadata:type_name -> rsk.Dialog.MetadataEntry
	11, // 16: rsk.GetTranscriptDialogRequest.range:type_name -> rsk.DialogRange
	6,  // 17: rsk.TranscriptList.episodes:type_name -> rsk.ShortTranscript
	53, // 18: rsk.Ratings.scores:type_name -> rsk.Ratings.ScoresEntry
	0,  // 19: rsk.ChunkStates.states:type_name -> rsk.ContributionState
	54, // 20: rsk.ChunkedTranscriptStats.chunk_contributions:type_name -> rsk.ChunkedTranscriptStats.ChunkContributionsEntry
	17, // 21: rsk.ChunkedTranscriptList.chunked:type_name -> rsk.ChunkedTranscriptStats
	21, // 22: rsk.TranscriptChunkList.chunks:type_name -> rsk.Chunk
	26, // 23: rsk.ChunkContributionList.contributions:type_name -> rsk.ChunkContribution
	0,  // 24: rsk.ChunkContribution.state:type_name -> rsk.ContributionState
	56, // 25: rsk.ChunkContribution.author:type_name -> rsk.Author
	0,  // 26: rsk.ShortChunkContribution.state:type_name -> rsk.ContributionState
	27, // 27: rsk.ChunkChunkContributionList.contributions:type_name -> rsk.ShortChunkContribution
	0,  // 28: rsk.UpdateChunkContributionRequest.state:type_name -> rsk.ContributionState
	0,  // 29: rsk.RequestChunkContributionStateRequest.request_state:type_name -> rsk.ContributionState
	0,  // 30: rsk.UpdateTranscriptChangeRequest.state:type_name -> rsk.ContributionState
	40, // 31: rsk.TranscriptChangeList.changes:type_name -> rsk.ShortTranscriptChange
	0,  // 32: rsk.TranscriptChange.state:type_name -> rsk.ContributionState
	56, // 33: rsk.TranscriptChange.author:type_name -> rsk.Author
	0,  // 34: rsk.ShortTranscriptChange.state:type_name -> rsk.ContributionState
	56, // 35: rsk.ShortTranscriptChange.author:type_name -> rsk.Author
	0,  // 36: rsk.RequestTranscriptChangeStateRequest.state:type_name -> rsk.ContributionState
	6,  // 37: rsk.TranscriptDialog.transcript_meta:type_name -> rsk.ShortTranscript
	7,  // 38: rsk.TranscriptDialog.dialog:type_name -> rsk.Dialog
	55, // 39: rsk.BulkSetTranscriptRatingScoreRequest.scores:type_name -> rsk.BulkSetTranscriptRatingScoreRequest.ScoresEntry
	49, // 40: rsk.BulkSetTranscriptTagsRequest.tags:type_name -> rsk.Tag
	16, // 41: rsk.ChunkedTranscriptStats.ChunkContributionsEntry.value:type_name -> rsk.ChunkStates
	10, // 42: rsk.TranscriptService.GetTranscript:input_type -> rsk.GetTranscriptRequest
	12, // 43: rsk.TranscriptService.GetTranscriptDialog:input_type -> rsk.GetTranscriptDialogRequest
	13, // 44: rsk.TranscriptService.ListTranscripts:input_type -> rsk.ListTranscriptsRequest
	57, // 45: rsk.TranscriptService.ListChunkedTranscripts:input_type -> google.protobuf.Empty
	57, // 46: rsk.TranscriptService.GetChunkedTranscriptChunkStats:input_type -> google.protobuf.Empty
	22, // 47: rsk.TranscriptService.ListTranscriptChunks:input_type -> rsk.ListTranscriptChunksRequest
	20, // 48: rsk.TranscriptService.GetTranscriptChunk:input_type -> rsk.GetTranscriptChunkRequest
	24, // 49: rsk.TranscriptService.ListChunkContributions:input_type -> rsk.ListChunkContributionsRequest
	30, // 50: rsk.TranscriptService.CreateChunkContribution:input_type -> rsk.CreateChunkContributionRequest
	29, // 51: rsk.TranscriptService.GetChunkContribution:input_type -> rsk.GetChunkContributionRequest
	31, // 52: rsk.TranscriptService.UpdateChunkContribution:input_type -> rsk.UpdateChunkContributionRequest
	32, // 53: rsk.TranscriptService.DeleteChunkContribution:input_type -> rsk.DeleteChunkContributionRequest
	33, // 54: rsk.TranscriptService.RequestChunkContributionState:input_type -> rsk.RequestChunkContributionStateRequest
	35, // 55: rsk.TranscriptService.ListTranscriptChanges:input_type -> rsk.ListTranscriptChangesRequest
	42, // 56: rsk.TranscriptService.GetTranscriptChange:input_type -> rsk.GetTranscriptChangeRequest
	43, // 57: rsk.TranscriptService.GetTranscriptChangeDiff:input_type -> rsk.GetTranscriptChangeDiffRequest
	34, // 58: rsk.TranscriptService.CreateTranscriptChange:input_type -> rsk.CreateTranscriptChangeRequest
	36, // 59: rsk.TranscriptService.UpdateTranscriptChange:input_type -> rsk.UpdateTranscriptChangeRequest
	37, // 60: rsk.TranscriptService.DeleteTranscriptChange:input_type -> rsk.DeleteTranscriptChangeRequest
	41, // 61: rsk.TranscriptService.RequestTranscriptChangeState:input_type -> rsk.RequestTranscriptChangeStateRequest
	46, // 62: rsk.TranscriptService.SetTranscriptRatingScore:input_type -> rsk.SetTranscriptRatingScoreRequest
	47, // 63: rsk.TranscriptService.BulkSetTranscriptRatingScore:input_type -> rsk.BulkSetTranscriptRatingScoreRequest
	48, // 64: rsk.TranscriptService.BulkSetTranscriptTags:input_type -> rsk.BulkSetTranscriptTagsRequest
	4,  // 65: rsk.TranscriptService.GetTranscript:output_type -> rsk.Transcript
	45, // 66: rsk.TranscriptService.GetTranscriptDialog:output_type -> rsk.TranscriptDialog
	14, // 67: rsk.TranscriptService.ListTranscripts:output_type -> rsk.TranscriptList
	18, // 68: rsk.TranscriptService.ListChunkedTranscripts:output_type -> rsk.ChunkedTranscriptList
	19, // 69: rsk.TranscriptService.GetChunkedTranscriptChunkStats:output_type -> rsk.ChunkStats
	23, // 70: rsk.TranscriptService.ListTranscriptChunks:output_type -> rsk.TranscriptChunkList
	21, // 71: rsk.TranscriptService.GetTranscriptChunk:output_type -> rsk.Chunk
	25, // 72: rsk.TranscriptService.ListChunkContributions:output_type -> rsk.ChunkContributionList
	26, // 73: rsk.TranscriptService.CreateChunkContribution:output_type -> rsk.ChunkContribution
	26, // 74: rsk.TranscriptService.GetChunkContribution:output_type -> rsk.ChunkContribution
	26, // 75: rsk.TranscriptService.UpdateChunkContribution:output_type -> rsk.ChunkContribution
	57, // 76: rsk.TranscriptService.DeleteChunkContribution:output_type -> google.protobuf.Empty
	26, // 77: rsk.TranscriptService.RequestChunkContributionState:output_type -> rsk.ChunkContribution
	38, // 78: rsk.TranscriptService.ListTranscriptChanges:output_type -> rsk.TranscriptChangeList
	39, // 79: rsk.TranscriptService.GetTranscriptChange:output_type -> rsk.TranscriptChange
	44, // 80: rsk.TranscriptService.GetTranscriptChangeDiff:output_type -> rsk.TranscriptChangeDiff
	39, // 81: rsk.TranscriptService.CreateTranscriptChange:output_type -> rsk.TranscriptChange
	39, // 82: rsk.TranscriptService.UpdateTranscriptChange:output_type -> rsk.TranscriptChange
	57, // 83: rsk.TranscriptService.DeleteTranscriptChange:output_type -> google.protobuf.Empty
	57, // 84: rsk.TranscriptService.RequestTranscriptChangeState:output_type -> google.protobuf.Empty
	57, // 85: rsk.TranscriptService.SetTranscriptRatingScore:output_type -> google.protobuf.Empty
	57, // 86: rsk.TranscriptService.BulkSetTranscriptRatingScore:output_type -> google.protobuf.Empty
	57, // 87: rsk.TranscriptService.BulkSetTranscriptTags:output_type -> google.protobuf.Empty
	65, // [65:88] is the sub-list for method output_type
	42, // [42:65] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_transcript_proto_init() }
func file_transcript_proto_init() {
	if File_transcript_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transcript_proto_rawDesc), len(file_transcript_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transcript_proto_goTypes,
		DependencyIndexes: file_transcript_proto_depIdxs,
		EnumInfos:         file_transcript_proto_enumTypes,
		MessageInfos:      file_transcript_proto_msgTypes,
	}.Build()
	File_transcript_proto = out.File
	file_transcript_proto_goTypes = nil
	file_transcript_proto_depIdxs = nil
}
