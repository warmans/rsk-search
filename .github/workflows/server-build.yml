name: server build/publish

env:
  GOLANGCI_VERSION: "v2.1.2"
  SERVER_ROOT: ./server

on:
  push:
    branches: [ main, develop ]

  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{env.SERVER_ROOT}}/go.mod
          cache-dependency-path: ${{env.SERVER_ROOT}}/go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: ${{env.GOLANGCI_VERSION}}
          working-directory: server
          skip-cache: true
          args: --timeout=5m

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{env.SERVER_ROOT}}/go.mod
          cache-dependency-path: ${{env.SERVER_ROOT}}/go.sum

      - name: Set up gotestfmt
        run: go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest


      - name: Run tests
        working-directory: ${{env.SERVER_ROOT}}
        run: |
          set -euo pipefail
          go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt -hide "empty-packages"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{env.SERVER_ROOT}}/go.mod
          cache-dependency-path: ${{env.SERVER_ROOT}}/go.sum

      - name: Build
        working-directory: ${{env.SERVER_ROOT}}
        run: make build

      - name: Generate data
        working-directory: ${{env.SERVER_ROOT}}
        run: make init.all generate.artifacts

      - name: Store binaries
        uses: actions/upload-artifact@v4
        with:
          name: server-binaries
          path: ${{env.SERVER_ROOT}}/bin
          retention-days: 1

      - name: Store generated data
        uses: actions/upload-artifact@v4
        with:
          name: server-data
          path: ${{env.SERVER_ROOT}}/var/gen
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download server binaries
        uses: actions/download-artifact@v4
        with:
          name: server-binaries
          path: ${{env.SERVER_ROOT}}/bin

      - name: Download generated data
        uses: actions/download-artifact@v4
        with:
          name: server-data
          path: ${{env.SERVER_ROOT}}/var/gen

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: warmans/rsk-search-api:latest
