@use "sass:color";
@import "imports";

@mixin drop-shadow {
  box-shadow: -1px 1px 5px 1px rgba(0, 0, 0, 0.05);
  -webkit-box-shadow: -1px 1px 5px 1px rgba(0, 0, 0, 0.05);
  -moz-box-shadow: -1px 1px 5px 1px rgba(0, 0, 0, 0.05);
}

html {
  position: relative;
  min-height: 100%;
}

// start scaling everything proportionally below this value.
@media (max-width: 650px) {
  html {
    font-size: 2.5vw;
  }
}

body {
  margin-bottom: 60px; /* Margin bottom by footer height */
}

pre {
  @include theme() {
    color: theme-get('text-color');
  }
}

.navbar {
  z-index: 100;

  @include theme() {
    background-color: theme-get('navbar-bg') !important;
    border-bottom: 2px solid theme-get('navbar-border');
  }
  .btn:focus,.btn:active {
    outline: none !important;
    box-shadow: none;
  }
}

.sub-nav {
  @include theme() {
    border-bottom: 1px solid theme-get("body-block-border");
  }

  a.active {
    @include theme() {
      color: theme-get("text-color")
    }
  }

  a:hover {
    text-decoration: none;
  }
}


.footer {
  width: 100%;
}

.code {
  font-family: monospace;
  white-space: pre;
  background-color: $code;
  padding: 2px 5px;

  @include theme() {
    background-color: theme-get('code-bg');
  }
}

.modal.open {
  display: block;
  background-color: rgba(0, 0, 0, 0.4);
}

.card {

  @include theme() {
    background-color: theme-get('fg-body');
  }

  .card-body {
    @include theme() {
      background-color: theme-get('fg-body');
      color: theme-get('text-color');
    }
  }

  .card-notification {
    @include theme() {
      background-color: theme-get('body-block-standout');
      color: theme-get('text-color');
    }
  }

  .card-header {
    font-weight: bold;
    color: $primary;
    @include theme() {
      background-color: theme-get('header-block-bg');
      border-color: theme-get('header-block-border') !important;
    }

    .text-muted {
      @include theme() {
        color: theme-get('fg-body');
      }
    }

    p {
      font-weight: normal;
      @include theme() {
        color: theme-get('header-block-text');
      }
    }

    .btn-secondary {
      background-color: transparent;
      border-color: transparent;
      @include theme() {
        color: theme-get('header-block-text') !important;
      }
    }

    .form-control {
      @include theme() {
        border-color: theme-get('header-block-border');
      }
    }
  }

  .card-footer {
    @include theme() {
      color: theme-get('text-color');
    }
  }

  .form-control {
    @include theme() {
      background-color: transparent;
      color: theme-get('header-block-text');
      border: none;
      border-bottom: 1px solid theme-get('body-block-border');
    }
  }

  .form-control:active, .form-control:focus {
    outline: none;
    box-shadow: none;
  }
}

.popover {
  @include theme() {
    background-color: theme-get('fg-body');
  }

  .popover-header {
    font-weight: bold;
    color: $primary;
    @include theme() {
      background-color: theme-get('header-block-bg');
      border-color: theme-get('header-block-border') !important;
    }

  }

  .popover-body {
    @include theme() {
      background-color: theme-get('fg-body');
      color: theme-get('text-color');
    }
  }
}

.table {
  @include theme() {
    color: theme-get('text-color');
  }

  th, td {
    @include theme() {
      border-top: 1px solid theme-get('body-block-border');
    }
    vertical-align: middle;
  }
}

.breadcrumb {
  background-color: transparent !important;
}

.progress {
  @include theme() {
    background-color: theme-get('progress-bg') !important;
  }
}

.modal-content {
  @include theme() {
    background-color: theme-get('fg-body') !important;
  }

  .modal-footer, .modal-header {
    @include theme() {
      border-color: theme-get('body-block-border') !important;
    }
  }
}

.modal-body, .modal-header {
  @include theme() {
    color: theme-get('text-color');
  }
}

.nav-tabs {

  border-bottom: none !important;
  z-index: 10;
  top: 1px;
  position: relative;

  .nav-link.active, .nav-item.show .nav-link {
    border-bottom: none;
    @include theme() {
      background-color: theme-get('fg-body-darker') !important;
      border-color: theme-get('body-block-border');
      border-bottom: none;
    }
  }

  .nav-item .nav-link {
    @include theme() {
      color: theme-get("text-color");
    }
  }

  .nav-link:hover, .nav-link.active {
    color: $primary !important;
    border: 1px solid;
    outline: none;
    box-shadow: none;
    cursor: pointer;
  }

  .nav-link:hover {
    border: 1px solid transparent !important;
    color: color.adjust($primary, $lightness: -10%) !important;
  }
}

.card .nav-tabs li {
  border: 1px solid;
  @include theme() {
    border-color: theme-get('header-block-border');
    border-bottom: none;
  }
}

.text-sm {
  font-size: 0.8rem;
}

.text-xs {
  font-size: 0.5rem;
}

.text-paragraph {
  font-weight: normal !important;
  @include theme() {
    color: theme-get('text-color');
  }
}

.btn-transparent {
  background-color: transparent;
  @include theme() {
    color: theme-get('text-color') !important;
  }

  &:focus {
    outline: none;
    box-shadow: none;
  }

  &:hover {
    @include theme() {
      color: theme-get('text-color') !important;
    }
  }
}

.close {
  @include theme() {
    color: theme-get('text-color');
  }
}

.clickable {
  cursor: pointer;
}

.user-icon {
  background-position: center;
  background-size: contain;
}

.border-bottom {
  @include theme() {
    border-color: theme-get('body-block-standout') !important;
  }
}

.border-body-block-standout {
  @include theme() {
    border-color: theme-get('body-block-standout') !important;
  }
}

.text-body-block-standout {
  @include theme() {
    color: theme-get('body-block-standout') !important;
  }
}

.pagination {
  .page-link:hover {
    @include theme() {
      background-color: theme-get('hover-highlight');
      color: #fff;
    }
  }
}

// how to use theme-get in the actual component?!
.player-fixed {
  @include theme() {
    color: theme-get('text-color');
    background-color: theme-get('fg-body-darker');
    border-top: 1px solid theme-get('fg-body');
  }
}

// autocomplete styled globally to avoid angular encapulation of innerHtml

.search-dropdown {
  @include theme() {
    background-color: theme-get('header-block-bg') !important;
    color: theme-get('header-block-text') !important;
  }

  .autocomplete-dropdown {
    .line:hover, .line.active {
      @include theme() {
        background-color: theme-get('header-block-bg-highlight') !important;
      }
    }
    .line {
      .matched {
        background: color.adjust($primary, $alpha: -0.5);
      }

      .not-matched {
        color: #444;
      }
    }
  }

}

app-markdown {
  img {
    max-width: 100%;
  }
}

app-user-menu {

  .arrow-up {
    @include theme() {
      border-bottom-color: theme-get('fg-body-darker') !important;
    }
  }

  .menu {
    @include theme() {
      color: theme-get('text-color');
      background-color: theme-get('fg-body-darker');
    }
  }
}

.illustration {
  @include theme() {
    -webkit-filter: invert(theme-get('invert-pcnt')); /* safari 6.0 - 9.0 */
    filter: invert(theme-get('invert-pcnt'));
  }
}

.background-illustration {
  @include theme() {
    -webkit-filter: invert(theme-get('invert-pcnt')); /* safari 6.0 - 9.0 */
    filter: invert(theme-get('invert-pcnt'));
  }
}

.text-block-bg {
  @include theme() {
    background-color: theme-get('header-block-text');
    color: theme-get('header-block-bg');
  }
}

.form-control-themed {
  @include theme() {
    background-color: transparent;
    color: theme-get('header-block-text');
    border: none;
    border-bottom: 1px solid theme-get('body-block-border');
  }
}

.form-control-themed:active, .form-control-themed:focus {
  background-color: transparent !important;
  outline: none !important;
  box-shadow: none !important;
}

.rating {
  align-items: flex-start;
  justify-content: flex-start;
}

.trivia-breakout {
  p {
    margin: 0 !important;;
  }
}


/* Importing Bootstrap SCSS file. */
@import "node_modules/bootstrap/scss/bootstrap";
